(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>a});var o=t(537),i=t.n(o),r=t(645),A=t.n(r)()(i());A.push([n.id,"* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.page-mask {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background-color: rgba(0,0,0,0.6);\n    visibility: hidden;\n}\n\nform {\n    position: fixed;\n    left: 50%;\n    top: 25%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 50%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #CAF0F8;\n    padding: 20px;\n    border-radius: 8px;\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.grid-container  {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 7fr;\n}\n\n.material-symbols-outlined {\n    font-variation-settings:\n    'FILL' 0,\n    'wght' 400,\n    'GRAD' 0,\n    'opsz' 48\n}\n\nspan.size-48 {\n    font-size: 40px;\n}\n\n.plus-button {\n    background-color: #03045E;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    border-radius: 15px;\n    justify-content: center;\n    width: 150px;\n    height: 30px;\n    border: none;\n}\n\n.plus-button:hover {\n    background-color: #0096C7;\n    color: black;\n}\n\nheader {\n    grid-column: 1 / 3;\n    padding: 15px;\n    background-color: #0077B6;\n    font-size: 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    user-select: none;\n}\n\n.side-bar {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    background-color: #48CAE4;\n}\n\n.content {\n    grid-row: 2 / 3;\n    background-color: #CAF0F8;\n    display: flex;\n    justify-content: center;\n}\n\n.container {\n    width: 80%;\n    margin-top: 20px;\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    margin: 10px 10px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    user-select: none;\n    padding: 5px;\n}\n\nli:hover, li:focus {\n    background-color: #00B4D8;\n}\n\n.dropdown-button {\n    width: 80%;\n    margin-left: 10px;\n    font-size: 20px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    user-select: none;\n    padding: 5px;\n}\n\n#expand {\n    margin-top: 5px;\n}\n\n.drop-menu {\n    position: relative;\n    display: inline-block;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    width: 90%;\n    margin-left: 10px;\n}\n\n.show {\n    display: block;\n}\n\n.project-button {\n    justify-content: space-evenly;\n}\n\n\n\n.task {\n    background-color: white;\n    width: 100%;\n    height: 40px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,+BAA+B;AACnC;;AAEA;IACI,eAAe;IACf,OAAO;IACP,QAAQ;IACR,SAAS;IACT,MAAM;IACN,iCAAiC;IACjC,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,SAAS;IACT,QAAQ;IACR,2BAA2B;IAC3B,UAAU;IACV,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;AAC/B;;AAEA;IACI;;;;;AAKJ;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,yBAAyB;IACzB,eAAe;IACf,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,6BAA6B;AACjC;;;;AAIA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;AAChB",sourcesContent:["* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.page-mask {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background-color: rgba(0,0,0,0.6);\n    visibility: hidden;\n}\n\nform {\n    position: fixed;\n    left: 50%;\n    top: 25%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 50%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #CAF0F8;\n    padding: 20px;\n    border-radius: 8px;\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.grid-container  {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 7fr;\n}\n\n.material-symbols-outlined {\n    font-variation-settings:\n    'FILL' 0,\n    'wght' 400,\n    'GRAD' 0,\n    'opsz' 48\n}\n\nspan.size-48 {\n    font-size: 40px;\n}\n\n.plus-button {\n    background-color: #03045E;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    border-radius: 15px;\n    justify-content: center;\n    width: 150px;\n    height: 30px;\n    border: none;\n}\n\n.plus-button:hover {\n    background-color: #0096C7;\n    color: black;\n}\n\nheader {\n    grid-column: 1 / 3;\n    padding: 15px;\n    background-color: #0077B6;\n    font-size: 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    user-select: none;\n}\n\n.side-bar {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    background-color: #48CAE4;\n}\n\n.content {\n    grid-row: 2 / 3;\n    background-color: #CAF0F8;\n    display: flex;\n    justify-content: center;\n}\n\n.container {\n    width: 80%;\n    margin-top: 20px;\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    margin: 10px 10px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    user-select: none;\n    padding: 5px;\n}\n\nli:hover, li:focus {\n    background-color: #00B4D8;\n}\n\n.dropdown-button {\n    width: 80%;\n    margin-left: 10px;\n    font-size: 20px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    user-select: none;\n    padding: 5px;\n}\n\n#expand {\n    margin-top: 5px;\n}\n\n.drop-menu {\n    position: relative;\n    display: inline-block;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    width: 90%;\n    margin-left: 10px;\n}\n\n.show {\n    display: block;\n}\n\n.project-button {\n    justify-content: space-evenly;\n}\n\n\n\n.task {\n    background-color: white;\n    width: 100%;\n    height: 40px;\n}"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(o)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);o&&A[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),A=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(A).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},A=[],a=0;a<n.length;a++){var s=n[a],c=o.base?s[0]+o.base:s[0],d=r[c]||0,l="".concat(c," ").concat(d);r[c]=d+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=i(u,o);o.byIndex=a,e.splice(a,0,{identifier:l,updater:f,references:1})}A.push(l)}return A}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var A=0;A<r.length;A++){var a=t(r[A]);e[a].references--}for(var s=o(n,i),c=0;c<r.length;c++){var d=t(r[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{d:()=>I});var n=t(379),e=t.n(n),i=t(795),r=t.n(i),A=t(569),a=t.n(A),s=t(565),c=t.n(s),d=t(216),l=t.n(d),p=t(589),u=t.n(p),f=t(28),m={};function C(){const n=document.querySelector(".tasks");for(;n.firstChild;)n.removeChild(n.lastChild);for(let e=0;e<I.length;e++){const t=document.createElement("div");t.classList.add("task"),t.textContent=I[e][title],n.appendChild(t);const o=document.createElement("input");o.setAttribute("type","checkbox"),t.appendChild(o),o.addEventListener("click",(()=>{o.checked&&(n.removeChild(t),I.splice(e,1))}))}}m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;class B{constructor(n,e,t,o){this.title=n,this.priority=t,this.description=o,this.date=e}}!function(){const n=document.querySelector(".dropdown-button"),e=document.getElementById("expand");n.addEventListener("click",(()=>{const n=document.querySelector(".dropdown-content");n.classList.contains("show")?(n.classList.remove("show"),e.textContent="expand_more"):(n.classList.add("show"),e.textContent="expand_less")}))}(),function(){const n=document.querySelector(".dropdown-content"),e=document.createElement("li"),t=document.createElement("span");t.textContent="add",t.classList.add("material-symbols-outlined"),e.textContent="Add project",e.classList.add("project-button"),n.appendChild(e),e.appendChild(t)}(),document.querySelector(".plus-button").addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="visible",document.querySelector("form").style.visibility="visible"})),function(){const n=document.getElementById("add"),e=document.getElementById("cancel");n.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("form").style.visibility="hidden"})),e.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("form").style.visibility="hidden"}))}();let I=[];document.getElementById("add").addEventListener("click",(()=>{let n=document.getElementById("title").value,e=document.getElementById("date").value,t=document.getElementById("priority").value,o=document.getElementById("description").value;const i=new B(n,e,t,o);I.push(i),document.getElementById("title").value="",document.getElementById("date").value="",document.getElementById("description").value="",C()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,