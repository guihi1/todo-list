(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>l});var o=t(537),i=t.n(o),r=t(645),d=t.n(r)()(i());d.push([e.id,"* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.page-mask {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background-color: rgba(0,0,0,0.6);\n    visibility: hidden;\n}\n\n#task-data {\n    position: fixed;\n    left: 50%;\n    top: 20%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #CAF0F8;\n    padding: 20px;\n    border-radius: 8px;\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.buttons {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 10px;\n}\n\n#project-form {\n    padding: 15px;\n    border-radius: 8px;\n    background-color: #CAF0F8;\n    position: fixed;\n    left: 50%;\n    top: 37%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 110px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    visibility: hidden;\n}\n\n#projectName-button {\n    width: 20%;\n}\n\n.grid-container  {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 7fr;\n}\n\n.material-symbols-outlined {\n    font-variation-settings:\n    'FILL' 0,\n    'wght' 400,\n    'GRAD' 0,\n    'opsz' 48\n}\n\nspan.size-48 {\n    font-size: 40px;\n}\n\n.plus-button {\n    background-color: #03045E;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    border-radius: 15px;\n    justify-content: center;\n    width: 150px;\n    height: 30px;\n    border: none;\n}\n\n.plus-button:hover {\n    background-color: #0096C7;\n    color: black;\n}\n\nheader {\n    grid-column: 1 / 3;\n    padding: 15px;\n    background-color: #0077B6;\n    font-size: 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    user-select: none;\n}\n\n.side-bar {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    background-color: #48CAE4;\n}\n\n.content {\n    grid-row: 2 / 3;\n    background-color: #CAF0F8;\n    display: flex;\n    justify-content: center;\n}\n\n.container {\n    width: 80%;\n    margin-top: 20px;\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    margin: 10px 10px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    user-select: none;\n    padding: 5px;\n}\n\nli:hover, li:focus {\n    background-color: #00B4D8;\n}\n\n.dropdown-button {\n    width: 80%;\n    margin-left: 10px;\n    font-size: 20px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    user-select: none;\n    padding: 5px;\n}\n\n#expand {\n    margin-top: 5px;\n}\n\n.drop-menu {\n    position: relative;\n    display: inline-block;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    width: 90%;\n    margin-left: 10px;\n}\n\n.show {\n    display: block;\n}\n\n.project-button {\n    justify-content: space-evenly;\n}\n\n.task {\n    width: 100%;\n    height: 40px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px 105px;\n    overflow: hidden;\n}\n\n.options {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    gap: 5px;\n    user-select: none;\n}\n\n.trash, .drop, .edit {\n    cursor: pointer;\n}\n\n.check-title {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n\n.expanded-content {\n    margin-bottom: 5px;\n}\n\n.column {\n    grid-column: 1 / 3;\n}\n\n.flex-justify {\n    justify-content: space-between;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,+BAA+B;AACnC;;AAEA;IACI,eAAe;IACf,OAAO;IACP,QAAQ;IACR,SAAS;IACT,MAAM;IACN,iCAAiC;IACjC,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,SAAS;IACT,QAAQ;IACR,2BAA2B;IAC3B,UAAU;IACV,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,aAAa;IACb,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,yBAAyB;IACzB,eAAe;IACf,SAAS;IACT,QAAQ;IACR,2BAA2B;IAC3B,UAAU;IACV,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;AAC/B;;AAEA;IACI;;;;;AAKJ;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,yBAAyB;IACzB,eAAe;IACf,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,iBAAiB;AACrB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,8BAA8B;IAC9B,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,QAAQ;IACR,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,8BAA8B;AAClC",sourcesContent:["* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: Roboto, sans-serif;\n}\n\n.page-mask {\n    position: fixed;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 0;\n    background-color: rgba(0,0,0,0.6);\n    visibility: hidden;\n}\n\n#task-data {\n    position: fixed;\n    left: 50%;\n    top: 20%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    background-color: #CAF0F8;\n    padding: 20px;\n    border-radius: 8px;\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.buttons {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    gap: 10px;\n}\n\n#project-form {\n    padding: 15px;\n    border-radius: 8px;\n    background-color: #CAF0F8;\n    position: fixed;\n    left: 50%;\n    top: 37%;\n    transform: translateX(-50%);\n    width: 35%;\n    height: 110px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    visibility: hidden;\n}\n\n#projectName-button {\n    width: 20%;\n}\n\n.grid-container  {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    grid-template-rows: 1fr 7fr;\n}\n\n.material-symbols-outlined {\n    font-variation-settings:\n    'FILL' 0,\n    'wght' 400,\n    'GRAD' 0,\n    'opsz' 48\n}\n\nspan.size-48 {\n    font-size: 40px;\n}\n\n.plus-button {\n    background-color: #03045E;\n    color: white;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    border-radius: 15px;\n    justify-content: center;\n    width: 150px;\n    height: 30px;\n    border: none;\n}\n\n.plus-button:hover {\n    background-color: #0096C7;\n    color: black;\n}\n\nheader {\n    grid-column: 1 / 3;\n    padding: 15px;\n    background-color: #0077B6;\n    font-size: 24px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo{\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    user-select: none;\n}\n\n.side-bar {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    display: flex;\n    flex-direction: column;\n    background-color: #48CAE4;\n}\n\n.content {\n    grid-row: 2 / 3;\n    background-color: #CAF0F8;\n    display: flex;\n    justify-content: center;\n}\n\n.container {\n    width: 80%;\n    margin-top: 20px;\n}\n\nul {\n    list-style: none;\n}\n\nli {\n    margin: 10px 10px;\n    font-size: 20px;\n    cursor: pointer;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    user-select: none;\n    padding: 5px;\n}\n\nli:hover, li:focus {\n    background-color: #00B4D8;\n}\n\n.dropdown-button {\n    width: 80%;\n    margin-left: 10px;\n    font-size: 20px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    user-select: none;\n    padding: 5px;\n}\n\n#expand {\n    margin-top: 5px;\n}\n\n.drop-menu {\n    position: relative;\n    display: inline-block;\n}\n\n.dropdown-content {\n    display: none;\n    position: absolute;\n    width: 90%;\n    margin-left: 10px;\n}\n\n.show {\n    display: block;\n}\n\n.project-button {\n    justify-content: space-evenly;\n}\n\n.task {\n    width: 100%;\n    height: 40px;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 40px 105px;\n    overflow: hidden;\n}\n\n.options {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    gap: 5px;\n    user-select: none;\n}\n\n.trash, .drop, .edit {\n    cursor: pointer;\n}\n\n.check-title {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n\n.expanded-content {\n    margin-bottom: 5px;\n}\n\n.column {\n    grid-column: 1 / 3;\n}\n\n.flex-justify {\n    justify-content: space-between;\n}"],sourceRoot:""}]);const l=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(d[c]=!0)}for(var a=0;a<e.length;a++){var s=[].concat(e[a]);o&&d[s[0]]||(void 0!==r&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=r),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),d=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(d).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},d=[],l=0;l<e.length;l++){var c=e[l],a=o.base?c[0]+o.base:c[0],s=r[a]||0,A="".concat(a," ").concat(s);r[a]=s+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=i(u,o);o.byIndex=l,n.splice(l,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var d=0;d<r.length;d++){var l=t(r[d]);n[l].references--}for(var c=o(e,i),a=0;a<r.length;a++){var s=t(r[a]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}r=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var o={};(()=>{t.d(o,{d:()=>E});var e=t(379),n=t.n(e),i=t(795),r=t.n(i),d=t(569),l=t.n(d),c=t(565),a=t.n(c),s=t(216),A=t.n(s),p=t(589),u=t.n(p),m=t(28),y={};function C(){localStorage.setItem("task",JSON.stringify(E))}function f(){localStorage.removeItem("task"),C()}let B;function g(e){const n=document.querySelector(".tasks");for(;n.firstChild;)n.removeChild(n.lastChild);for(let t=0;t<e.length;t++){const o=document.createElement("div");o.classList.add("task"),n.appendChild(o);const i=document.createElement("div");i.classList.add("check-title"),o.appendChild(i);const r=document.createElement("input");r.setAttribute("type","checkbox"),i.appendChild(r),r.addEventListener("click",(()=>{if(r.checked){n.removeChild(o);let i=E.findIndex((n=>n===e[t]));E.splice(i,1),f(),g(e)}}));const d=document.createElement("p");d.textContent=`${e[t].title}`,i.appendChild(d);const l=document.createElement("div");l.classList.add("options"),o.appendChild(l);const c=document.createElement("p");c.textContent=`${e[t].date.substring(0,10)}`,l.appendChild(c);const a=document.createElement("span");a.classList.add("trash"),a.classList.add("material-symbols-outlined"),a.textContent="delete",l.appendChild(a),a.addEventListener("click",(()=>{n.removeChild(o);let i=E.findIndex((n=>n===e[t]));E.splice(i,1),f(),g(e)}));const s=document.createElement("span");s.classList.add("material-symbols-outlined"),s.classList.add("edit"),s.textContent="edit",l.appendChild(s),s.addEventListener("click",(()=>{B=E.findIndex((n=>n===e[t])),document.querySelector("form").classList.add("editing"),document.querySelector(".page-mask").style.visibility="visible",document.querySelector("form").style.visibility="visible",document.getElementById("title").value=e[t].title,document.getElementById("date").value=e[t].date,document.getElementById("description").value=e[t].description,document.getElementById("priority").value=e[t].priority,document.getElementById("project").value=e[t].project,document.getElementById("add").textContent="Edit task"}));const A=document.createElement("span");A.classList.add("material-symbols-outlined"),A.classList.add("drop"),A.textContent="expand_more",l.appendChild(A);const p=document.createElement("div");p.classList.add("column"),A.addEventListener("click",(()=>{if(A.classList.contains("expanded")){for(;p.firstChild;)p.removeChild(p.lastChild);o.removeChild(p),A.textContent="expand_more",A.classList.remove("expanded"),o.style.height="40px"}else{o.appendChild(p),A.classList.add("expanded"),A.textContent="expand_less",o.style.height="145px";const n=document.createElement("p");n.classList.add("expanded-content"),n.textContent=`Description: ${e[t].description}`,p.appendChild(n);const i=document.createElement("p");i.classList.add("expanded-content"),i.textContent=`Due date: ${e[t].date.substring(0,10)}, ${e[t].date.substring(11,16)}`,p.appendChild(i);const r=document.createElement("p");r.classList.add("expanded-content"),"1"==e[t].priority?r.textContent="Priority: Low":"2"==e[t].priority?r.textContent="Priority: Medium":r.textContent="Priority: High",p.appendChild(r);const d=document.createElement("p");d.textContent=`Project: ${e[t].project}`,p.appendChild(d)}}));const u=document.createElement("hr");n.appendChild(u)}}y.styleTagTransform=u(),y.setAttributes=a(),y.insert=l().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=A(),n()(m.Z,y),m.Z&&m.Z.locals&&m.Z.locals;class I{constructor(e,n,t,o,i){this.title=e,this.priority=t,this.description=o,this.date=n,this.project=i}}let x=new Date,b=String(x.getDate()).padStart(2,"0"),v=String(x.getMonth()+1).padStart(2,"0"),h=x.getFullYear();x=h+"-"+v+"-"+b;let E=[];localStorage.getItem("task")&&(E=JSON.parse(localStorage.getItem("task")),g(E)),function(){const e=document.querySelector(".dropdown-button"),n=document.getElementById("expand");e.addEventListener("click",(()=>{const e=document.querySelector(".dropdown-content");e.classList.contains("show")?(e.classList.remove("show"),n.textContent="expand_more"):(e.classList.add("show"),n.textContent="expand_less")}))}(),function(){let e=[];for(const n of E)"inbox"!==n.project&&e.push(n.project);let n=Array.from(new Set(e));for(let e=0;e<n.length;e++){const t=document.querySelector(".dropdown-content");let o=n[e];const i=document.createElement("li");i.classList.add("flex-justify"),i.textContent=`${o}`,t.appendChild(i);const r=document.createElement("span");r.classList.add("material-symbols-outlined"),r.textContent="delete",i.appendChild(r),i.addEventListener("click",(()=>{g(E.filter((e=>e.project===o))),document.querySelector("#content-title").textContent=o}))}document.querySelector(".project-button").addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="visible",document.querySelector("#project-form").style.visibility="visible"})),document.getElementById("projectName-button").addEventListener("click",(()=>{const e=document.querySelector(".dropdown-content");let n=document.getElementById("new-project").value;const t=document.createElement("li");t.classList.add("flex-justify"),t.textContent=`${n}`,e.appendChild(t);const o=document.createElement("span");o.classList.add("material-symbols-outlined"),o.textContent="delete",t.appendChild(o),t.addEventListener("click",(()=>{g(E.filter((e=>e.project===n))),document.querySelector("#content-title").textContent=n}))}))}(),document.querySelector(".plus-button").addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="visible",document.querySelector("form").style.visibility="visible"})),function(){const e=document.getElementById("add"),n=document.getElementById("cancel"),t=document.getElementById("cancel-project"),o=document.getElementById("projectName-button");e.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("form").style.visibility="hidden"})),n.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("form").style.visibility="hidden",document.getElementById("title").value="",document.getElementById("date").value="",document.getElementById("description").value="",document.getElementById("priority").value="1",document.getElementById("project").value="inbox",document.getElementById("add").textContent="Add task"})),o.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("#project-form").style.visibility="hidden"})),t.addEventListener("click",(()=>{document.querySelector(".page-mask").style.visibility="hidden",document.querySelector("#project-form").style.visibility="hidden",document.getElementById("new-project").value=""}))}(),function(){let e=[];for(const n of E)"inbox"!==n.project&&e.push(n.project);let n=Array.from(new Set(e));for(let e=0;e<n.length;e++){const t=document.getElementById("project");let o=n[e];const i=document.createElement("option");i.textContent=o,i.setAttribute("value",`${o}`),t.appendChild(i),document.getElementById("new-project").value=""}document.querySelector("#projectName-button").addEventListener("click",(()=>{const e=document.getElementById("project");let n=document.getElementById("new-project").value;const t=document.createElement("option");t.textContent=n,t.setAttribute("value",`${n}`),e.appendChild(t),document.getElementById("new-project").value=""}))}(),document.querySelector("#inbox").addEventListener("click",(()=>{document.querySelector("#content-title").textContent="Inbox",g(E.filter((e=>"inbox"===e.project)))})),document.querySelector("#today").addEventListener("click",(()=>{document.querySelector("#content-title").textContent="Today",g(E.filter((e=>e.date.substring(0,10)===x)))})),document.querySelector("#all-tasks").addEventListener("click",(()=>{document.querySelector("#content-title").textContent="All tasks",g(E)})),document.getElementById("add").addEventListener("click",(()=>{if(document.querySelector("form").classList.contains("editing")){let e=document.getElementById("title").value,n=document.getElementById("date").value,t=document.getElementById("priority").value,o=document.getElementById("description").value,i=document.getElementById("project").value;if(E[B]=new I(e,n,t,o,i),f(),document.querySelector("form").classList.remove("editing"),document.getElementById("add").textContent="Add task",document.getElementById("title").value="",document.getElementById("date").value="",document.getElementById("description").value="",document.getElementById("priority").value="1",document.getElementById("project").value="inbox","Today"==document.getElementById("content-title").textContent)g(E.filter((e=>e.date.substring(0,10)===x)));else if("All tasks"==document.getElementById("content-title").textContent)g(E);else if("Inbox"==document.getElementById("content-title").textContent)g(E.filter((e=>"inbox"===e.project)));else{let e=document.getElementById("content-title").textContent;g(E.filter((n=>n.project===e)))}}else{let e=document.getElementById("title").value,n=document.getElementById("date").value,t=document.getElementById("priority").value,o=document.getElementById("description").value,i=document.getElementById("project").value;const r=new I(e,n,t,o,i);if(E.push(r),C(),document.getElementById("title").value="",document.getElementById("date").value="",document.getElementById("description").value="",document.getElementById("priority").value="1",document.getElementById("project").value="inbox","Today"==document.getElementById("content-title").textContent)g(E.filter((e=>e.date.substring(0,10)===x)));else if("All tasks"==document.getElementById("content-title").textContent)g(E);else if("Inbox"==document.getElementById("content-title").textContent)g(E.filter((e=>"inbox"===e.project)));else{let e=document.getElementById("content-title").textContent;g(E.filter((n=>n.project===e)))}}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoidUZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkseXFIQUEwcUgsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsOEJBQThCLE1BQVEsR0FBRyxTQUFXLHl5REFBeXlELGVBQWlCLENBQUMsMHFIQUEwcUgsV0FBYSxNQUVweFMsUyxVQ0RBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0E2RlgsT0EzRkFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVUsR0FDVkMsT0FBK0IsSUFBWkYsRUFBSyxHQTRCNUIsT0ExQklBLEVBQUssS0FDUEMsR0FBVyxjQUFjRSxPQUFPSCxFQUFLLEdBQUksUUFHdkNBLEVBQUssS0FDUEMsR0FBVyxVQUFVRSxPQUFPSCxFQUFLLEdBQUksT0FHbkNFLElBQ0ZELEdBQVcsU0FBU0UsT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksT0FHNUVDLEdBQVdOLEVBQXVCSyxHQUU5QkUsSUFDRkQsR0FBVyxLQUdURCxFQUFLLEtBQ1BDLEdBQVcsS0FHVEQsRUFBSyxLQUNQQyxHQUFXLEtBR05BLENBQ1QsSUFBR0ksS0FBSyxHQUNWLEVBR0FULEVBQUtVLEVBQUksU0FBV0MsRUFBU0MsRUFBT0MsRUFBUUMsRUFBVUMsR0FDN0IsaUJBQVpKLElBQ1RBLEVBQVUsQ0FBQyxDQUFDLEtBQU1BLE9BQVNLLEtBRzdCLElBQUlDLEVBQXlCLENBQUMsRUFFOUIsR0FBSUosRUFDRixJQUFLLElBQUlLLEVBQUksRUFBR0EsRUFBSWhCLEtBQUtNLE9BQVFVLElBQUssQ0FDcEMsSUFBSXJCLEVBQUtLLEtBQUtnQixHQUFHLEdBRVAsTUFBTnJCLElBQ0ZvQixFQUF1QnBCLElBQU0sRUFFakMsQ0FHRixJQUFLLElBQUlzQixFQUFLLEVBQUdBLEVBQUtSLEVBQVFILE9BQVFXLElBQU0sQ0FDMUMsSUFBSWYsRUFBTyxHQUFHRyxPQUFPSSxFQUFRUSxJQUV6Qk4sR0FBVUksRUFBdUJiLEVBQUssV0FJckIsSUFBVlcsU0FDYyxJQUFaWCxFQUFLLEtBR2RBLEVBQUssR0FBSyxTQUFTRyxPQUFPSCxFQUFLLEdBQUdJLE9BQVMsRUFBSSxJQUFJRCxPQUFPSCxFQUFLLElBQU0sR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksTUFGL0ZBLEVBQUssR0FBS1csR0FPVkgsSUFDR1IsRUFBSyxJQUdSQSxFQUFLLEdBQUssVUFBVUcsT0FBT0gsRUFBSyxHQUFJLE1BQU1HLE9BQU9ILEVBQUssR0FBSSxLQUMxREEsRUFBSyxHQUFLUSxHQUhWUixFQUFLLEdBQUtRLEdBT1ZFLElBQ0dWLEVBQUssSUFHUkEsRUFBSyxHQUFLLGNBQWNHLE9BQU9ILEVBQUssR0FBSSxPQUFPRyxPQUFPSCxFQUFLLEdBQUksS0FDL0RBLEVBQUssR0FBS1UsR0FIVlYsRUFBSyxHQUFLLEdBQUdHLE9BQU9PLElBT3hCZCxFQUFLTCxLQUFLUyxHQUNaLENBQ0YsRUFFT0osQ0FDVCxDLFVDbkdBSixFQUFPRSxRQUFVLFNBQVVNLEdBQ3pCLElBQUlDLEVBQVVELEVBQUssR0FDZmdCLEVBQWFoQixFQUFLLEdBRXRCLElBQUtnQixFQUNILE9BQU9mLEVBR1QsR0FBb0IsbUJBQVRnQixLQUFxQixDQUM5QixJQUFJQyxFQUFTRCxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVOLE1BQ3pETyxFQUFPLCtEQUErRHBCLE9BQU9lLEdBQzdFTSxFQUFnQixPQUFPckIsT0FBT29CLEVBQU0sT0FDcENFLEVBQWFULEVBQVdVLFFBQVEzQixLQUFJLFNBQVU0QixHQUNoRCxNQUFPLGlCQUFpQnhCLE9BQU9hLEVBQVdZLFlBQWMsSUFBSXpCLE9BQU93QixFQUFRLE1BQzdFLElBQ0EsTUFBTyxDQUFDMUIsR0FBU0UsT0FBT3NCLEdBQVl0QixPQUFPLENBQUNxQixJQUFnQm5CLEtBQUssS0FDbkUsQ0FFQSxNQUFPLENBQUNKLEdBQVNJLEtBQUssS0FDeEIsQyxVQ25CQSxJQUFJd0IsRUFBYyxHQUVsQixTQUFTQyxFQUFxQkMsR0FHNUIsSUFGQSxJQUFJQyxHQUFVLEVBRUwxQixFQUFJLEVBQUdBLEVBQUl1QixFQUFZekIsT0FBUUUsSUFDdEMsR0FBSXVCLEVBQVl2QixHQUFHeUIsYUFBZUEsRUFBWSxDQUM1Q0MsRUFBUzFCLEVBQ1QsS0FDRixDQUdGLE9BQU8wQixDQUNULENBRUEsU0FBU0MsRUFBYXJDLEVBQU1zQyxHQUkxQixJQUhBLElBQUlDLEVBQWEsQ0FBQyxFQUNkQyxFQUFjLEdBRVQ5QixFQUFJLEVBQUdBLEVBQUlWLEVBQUtRLE9BQVFFLElBQUssQ0FDcEMsSUFBSU4sRUFBT0osRUFBS1UsR0FDWmIsRUFBS3lDLEVBQVFHLEtBQU9yQyxFQUFLLEdBQUtrQyxFQUFRRyxLQUFPckMsRUFBSyxHQUNsRHNDLEVBQVFILEVBQVcxQyxJQUFPLEVBQzFCc0MsRUFBYSxHQUFHNUIsT0FBT1YsRUFBSSxLQUFLVSxPQUFPbUMsR0FDM0NILEVBQVcxQyxHQUFNNkMsRUFBUSxFQUN6QixJQUFJQyxFQUFvQlQsRUFBcUJDLEdBQ3pDUyxFQUFNLENBQ1JDLElBQUt6QyxFQUFLLEdBQ1ZRLE1BQU9SLEVBQUssR0FDWjBDLFVBQVcxQyxFQUFLLEdBQ2hCVSxTQUFVVixFQUFLLEdBQ2ZXLE1BQU9YLEVBQUssSUFHZCxJQUEyQixJQUF2QnVDLEVBQ0ZWLEVBQVlVLEdBQW1CSSxhQUMvQmQsRUFBWVUsR0FBbUJLLFFBQVFKLE9BQ2xDLENBQ0wsSUFBSUksRUFBVUMsRUFBZ0JMLEVBQUtOLEdBQ25DQSxFQUFRWSxRQUFVeEMsRUFDbEJ1QixFQUFZa0IsT0FBT3pDLEVBQUcsRUFBRyxDQUN2QnlCLFdBQVlBLEVBQ1phLFFBQVNBLEVBQ1RELFdBQVksR0FFaEIsQ0FFQVAsRUFBWTdDLEtBQUt3QyxFQUNuQixDQUVBLE9BQU9LLENBQ1QsQ0FFQSxTQUFTUyxFQUFnQkwsRUFBS04sR0FDNUIsSUFBSWMsRUFBTWQsRUFBUWUsT0FBT2YsR0FlekIsT0FkQWMsRUFBSUUsT0FBT1YsR0FFRyxTQUFpQlcsR0FDN0IsR0FBSUEsRUFBUSxDQUNWLEdBQUlBLEVBQU9WLE1BQVFELEVBQUlDLEtBQU9VLEVBQU8zQyxRQUFVZ0MsRUFBSWhDLE9BQVMyQyxFQUFPVCxZQUFjRixFQUFJRSxXQUFhUyxFQUFPekMsV0FBYThCLEVBQUk5QixVQUFZeUMsRUFBT3hDLFFBQVU2QixFQUFJN0IsTUFDekosT0FHRnFDLEVBQUlFLE9BQU9WLEVBQU1XLEVBQ25CLE1BQ0VILEVBQUlJLFFBRVIsQ0FHRixDQUVBNUQsRUFBT0UsUUFBVSxTQUFVRSxFQUFNc0MsR0FHL0IsSUFBSW1CLEVBQWtCcEIsRUFEdEJyQyxFQUFPQSxHQUFRLEdBRGZzQyxFQUFVQSxHQUFXLENBQUMsR0FHdEIsT0FBTyxTQUFnQm9CLEdBQ3JCQSxFQUFVQSxHQUFXLEdBRXJCLElBQUssSUFBSWhELEVBQUksRUFBR0EsRUFBSStDLEVBQWdCakQsT0FBUUUsSUFBSyxDQUMvQyxJQUNJaUQsRUFBUXpCLEVBREt1QixFQUFnQi9DLElBRWpDdUIsRUFBWTBCLEdBQU9aLFlBQ3JCLENBSUEsSUFGQSxJQUFJYSxFQUFxQnZCLEVBQWFxQixFQUFTcEIsR0FFdEN1QixFQUFLLEVBQUdBLEVBQUtKLEVBQWdCakQsT0FBUXFELElBQU0sQ0FDbEQsSUFFSUMsRUFBUzVCLEVBRkt1QixFQUFnQkksSUFJSyxJQUFuQzVCLEVBQVk2QixHQUFRZixhQUN0QmQsRUFBWTZCLEdBQVFkLFVBRXBCZixFQUFZa0IsT0FBT1csRUFBUSxHQUUvQixDQUVBTCxFQUFrQkcsQ0FDcEIsQ0FDRixDLFVDckdBLElBQUlHLEVBQU8sQ0FBQyxFQW9DWm5FLEVBQU9FLFFBVlAsU0FBMEJrRSxFQUFRQyxHQUNoQyxJQUFJQyxFQXhCTixTQUFtQkEsR0FDakIsUUFBNEIsSUFBakJILEVBQUtHLEdBQXlCLENBQ3ZDLElBQUlDLEVBQWNDLFNBQVNDLGNBQWNILEdBRXpDLEdBQUlJLE9BQU9DLG1CQUFxQkosYUFBdUJHLE9BQU9DLGtCQUM1RCxJQUdFSixFQUFjQSxFQUFZSyxnQkFBZ0JDLElBSTVDLENBSEUsTUFBT0MsR0FFUFAsRUFBYyxJQUNoQixDQUdGSixFQUFLRyxHQUFVQyxDQUNqQixDQUVBLE9BQU9KLEVBQUtHLEVBQ2QsQ0FLZVMsQ0FBVVgsR0FFdkIsSUFBS0UsRUFDSCxNQUFNLElBQUlVLE1BQU0sMkdBR2xCVixFQUFPVyxZQUFZWixFQUNyQixDLFVDMUJBckUsRUFBT0UsUUFQUCxTQUE0QndDLEdBQzFCLElBQUl3QyxFQUFVVixTQUFTVyxjQUFjLFNBR3JDLE9BRkF6QyxFQUFRMEMsY0FBY0YsRUFBU3hDLEVBQVEyQyxZQUN2QzNDLEVBQVEwQixPQUFPYyxFQUFTeEMsRUFBUUEsU0FDekJ3QyxDQUNULEMsZ0JDR0FsRixFQUFPRSxRQVJQLFNBQXdDb0YsR0FDdEMsSUFBSUMsRUFBbUQsS0FFbkRBLEdBQ0ZELEVBQWFFLGFBQWEsUUFBU0QsRUFFdkMsQyxVQzREQXZGLEVBQU9FLFFBWlAsU0FBZ0J3QyxHQUNkLElBQUk0QyxFQUFlNUMsRUFBUStDLG1CQUFtQi9DLEdBQzlDLE1BQU8sQ0FDTGdCLE9BQVEsU0FBZ0JWLElBekQ1QixTQUFlc0MsRUFBYzVDLEVBQVNNLEdBQ3BDLElBQUlDLEVBQU0sR0FFTkQsRUFBSTlCLFdBQ04rQixHQUFPLGNBQWN0QyxPQUFPcUMsRUFBSTlCLFNBQVUsUUFHeEM4QixFQUFJaEMsUUFDTmlDLEdBQU8sVUFBVXRDLE9BQU9xQyxFQUFJaEMsTUFBTyxPQUdyQyxJQUFJTixPQUFpQyxJQUFkc0MsRUFBSTdCLE1BRXZCVCxJQUNGdUMsR0FBTyxTQUFTdEMsT0FBT3FDLEVBQUk3QixNQUFNUCxPQUFTLEVBQUksSUFBSUQsT0FBT3FDLEVBQUk3QixPQUFTLEdBQUksT0FHNUU4QixHQUFPRCxFQUFJQyxJQUVQdkMsSUFDRnVDLEdBQU8sS0FHTEQsRUFBSWhDLFFBQ05pQyxHQUFPLEtBR0xELEVBQUk5QixXQUNOK0IsR0FBTyxLQUdULElBQUlDLEVBQVlGLEVBQUlFLFVBRWhCQSxHQUE2QixvQkFBVHpCLE9BQ3RCd0IsR0FBTyx1REFBdUR0QyxPQUFPYyxLQUFLRSxTQUFTQyxtQkFBbUJDLEtBQUtDLFVBQVVvQixNQUFlLFFBTXRJUixFQUFRZ0Qsa0JBQWtCekMsRUFBS3FDLEVBQWM1QyxFQUFRQSxRQUN2RCxDQWlCTWlELENBQU1MLEVBQWM1QyxFQUFTTSxFQUMvQixFQUNBWSxPQUFRLFlBakJaLFNBQTRCMEIsR0FFMUIsR0FBZ0MsT0FBNUJBLEVBQWFNLFdBQ2YsT0FBTyxFQUdUTixFQUFhTSxXQUFXQyxZQUFZUCxFQUN0QyxDQVdNUSxDQUFtQlIsRUFDckIsRUFFSixDLFVDcERBdEYsRUFBT0UsUUFaUCxTQUEyQitDLEVBQUtxQyxHQUM5QixHQUFJQSxFQUFhUyxXQUNmVCxFQUFhUyxXQUFXQyxRQUFVL0MsTUFDN0IsQ0FDTCxLQUFPcUMsRUFBYVcsWUFDbEJYLEVBQWFPLFlBQVlQLEVBQWFXLFlBR3hDWCxFQUFhTCxZQUFZVCxTQUFTMEIsZUFBZWpELEdBQ25ELENBQ0YsQyxHQ1pJa0QsRUFBMkIsQ0FBQyxFQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCakYsSUFBakJrRixFQUNILE9BQU9BLEVBQWFwRyxRQUdyQixJQUFJRixFQUFTbUcsRUFBeUJFLEdBQVksQ0FDakRwRyxHQUFJb0csRUFFSm5HLFFBQVMsQ0FBQyxHQU9YLE9BSEFxRyxFQUFvQkYsR0FBVXJHLEVBQVFBLEVBQU9FLFFBQVNrRyxHQUcvQ3BHLEVBQU9FLE9BQ2YsQ0NyQkFrRyxFQUFvQkksRUFBS3hHLElBQ3hCLElBQUl5RyxFQUFTekcsR0FBVUEsRUFBTzBHLFdBQzdCLElBQU8xRyxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQW9HLEVBQW9CTyxFQUFFRixFQUFRLENBQUVHLEVBQUdILElBQzVCQSxDQUFNLEVDTGRMLEVBQW9CTyxFQUFJLENBQUN6RyxFQUFTMkcsS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYVCxFQUFvQlcsRUFBRUYsRUFBWUMsS0FBU1YsRUFBb0JXLEVBQUU3RyxFQUFTNEcsSUFDNUVFLE9BQU9DLGVBQWUvRyxFQUFTNEcsRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLElBRTFFLEVDTkRWLEVBQW9CVyxFQUFJLENBQUMvRCxFQUFLb0UsSUFBVUosT0FBT0ssVUFBVUMsZUFBZUMsS0FBS3ZFLEVBQUtvRSxHQ0FsRmhCLEVBQW9Cb0IsUUFBS3BHLEUsd0pDV3JCc0IsRUFBVSxDQUFDLEVDUlIsU0FBUytFLElBQ1pDLGFBQWFDLFFBQVEsT0FBUTlGLEtBQUtDLFVBQVU4RixHQUNoRCxDQVNPLFNBQVNDLElBQ1pILGFBQWFJLFdBQVcsUUFDeEJMLEdBQ0osQ0NiTyxJQUFJMUQsRUFnSEosU0FBU2dFLEVBQVVDLEdBQ3RCLE1BQU12SCxFQUFVK0QsU0FBU0MsY0FBYyxVQUN2QyxLQUFNaEUsRUFBUXdGLFlBQ1Z4RixFQUFRb0YsWUFBWXBGLEVBQVF3SCxXQUVoQyxJQUFJLElBQUluSCxFQUFJLEVBQUdBLEVBQUlrSCxFQUFJcEgsT0FBUUUsSUFBSSxDQUMvQixNQUFNb0gsRUFBTTFELFNBQVNXLGNBQWMsT0FDbkMrQyxFQUFJQyxVQUFVQyxJQUFJLFFBQ2xCM0gsRUFBUXdFLFlBQVlpRCxHQUNwQixNQUFNRyxFQUFZN0QsU0FBU1csY0FBYyxPQUN6Q2tELEVBQVVGLFVBQVVDLElBQUksZUFDeEJGLEVBQUlqRCxZQUFZb0QsR0FDaEIsTUFBTUMsRUFBUTlELFNBQVNXLGNBQWMsU0FDckNtRCxFQUFNOUMsYUFBYSxPQUFRLFlBQzNCNkMsRUFBVXBELFlBQVlxRCxHQUN0QkEsRUFBTUMsaUJBQWlCLFNBQVMsS0FDNUIsR0FBR0QsRUFBTUUsUUFBUyxDQUNkL0gsRUFBUW9GLFlBQVlxQyxHQUNwQixJQUFJTyxFQUFlYixFQUFRYyxXQUFVQyxHQUFNQSxJQUFPWCxFQUFJbEgsS0FDdEQ4RyxFQUFRckUsT0FBT2tGLEVBQWMsR0FDN0JaLElBQ0FFLEVBQVVDLEVBQ2QsS0FFSixNQUFNWSxFQUFJcEUsU0FBU1csY0FBYyxLQUNqQ3lELEVBQUVDLFlBQWMsR0FBR2IsRUFBSWxILEdBQUdnSSxRQUMxQlQsRUFBVXBELFlBQVkyRCxHQUV0QixNQUFNRyxFQUFTdkUsU0FBU1csY0FBYyxPQUN0QzRELEVBQU9aLFVBQVVDLElBQUksV0FDckJGLEVBQUlqRCxZQUFZOEQsR0FFaEIsTUFBTUMsRUFBT3hFLFNBQVNXLGNBQWMsS0FDcEM2RCxFQUFLSCxZQUFjLEdBQUdiLEVBQUlsSCxHQUFHa0ksS0FBS0MsVUFBVSxFQUFHLE1BQy9DRixFQUFPOUQsWUFBWStELEdBRW5CLE1BQU1FLEVBQVExRSxTQUFTVyxjQUFjLFFBQ3JDK0QsRUFBTWYsVUFBVUMsSUFBSSxTQUNwQmMsRUFBTWYsVUFBVUMsSUFBSSw2QkFDcEJjLEVBQU1MLFlBQWMsU0FDcEJFLEVBQU85RCxZQUFZaUUsR0FDbkJBLEVBQU1YLGlCQUFpQixTQUFTLEtBQzVCOUgsRUFBUW9GLFlBQVlxQyxHQUNwQixJQUFJTyxFQUFlYixFQUFRYyxXQUFVQyxHQUFNQSxJQUFPWCxFQUFJbEgsS0FDdEQ4RyxFQUFRckUsT0FBT2tGLEVBQWMsR0FDN0JaLElBQ0FFLEVBQVVDLEVBQUksSUFHbEIsTUFBTW1CLEVBQU8zRSxTQUFTVyxjQUFjLFFBQ3BDZ0UsRUFBS2hCLFVBQVVDLElBQUksNkJBQ25CZSxFQUFLaEIsVUFBVUMsSUFBSSxRQUNuQmUsRUFBS04sWUFBYyxPQUNuQkUsRUFBTzlELFlBQVlrRSxHQUNuQkEsRUFBS1osaUJBQWlCLFNBQVMsS0FDM0J4RSxFQUFRNkQsRUFBUWMsV0FBVUMsR0FBTUEsSUFBT1gsRUFBSWxILEtBQzNDMEQsU0FBU0MsY0FBYyxRQUFRMEQsVUFBVUMsSUFBSSxXQUM3QzVELFNBQVNDLGNBQWMsY0FBY0osTUFBTStFLFdBQWEsVUFDeEQ1RSxTQUFTQyxjQUFjLFFBQVFKLE1BQU0rRSxXQUFhLFVBQ2xENUUsU0FBUzZFLGVBQWUsU0FBU0MsTUFBUXRCLEVBQUlsSCxHQUFHZ0ksTUFDaER0RSxTQUFTNkUsZUFBZSxRQUFRQyxNQUFRdEIsRUFBSWxILEdBQUdrSSxLQUMvQ3hFLFNBQVM2RSxlQUFlLGVBQWVDLE1BQVF0QixFQUFJbEgsR0FBR3lJLFlBQ3REL0UsU0FBUzZFLGVBQWUsWUFBWUMsTUFBUXRCLEVBQUlsSCxHQUFHMEksU0FDbkRoRixTQUFTNkUsZUFBZSxXQUFXQyxNQUFRdEIsRUFBSWxILEdBQUcySSxRQUNsRGpGLFNBQVM2RSxlQUFlLE9BQU9SLFlBQWMsV0FBVyxJQUc1RCxNQUFNYSxFQUFPbEYsU0FBU1csY0FBYyxRQUNwQ3VFLEVBQUt2QixVQUFVQyxJQUFJLDZCQUNuQnNCLEVBQUt2QixVQUFVQyxJQUFJLFFBQ25Cc0IsRUFBS2IsWUFBYyxjQUNuQkUsRUFBTzlELFlBQVl5RSxHQUVuQixNQUFNQyxFQUFXbkYsU0FBU1csY0FBYyxPQUN4Q3dFLEVBQVN4QixVQUFVQyxJQUFJLFVBQ3ZCc0IsRUFBS25CLGlCQUFpQixTQUFTLEtBQzNCLEdBQUdtQixFQUFLdkIsVUFBVXlCLFNBQVMsWUFBWSxDQUNuQyxLQUFNRCxFQUFTMUQsWUFDWDBELEVBQVM5RCxZQUFZOEQsRUFBUzFCLFdBRWxDQyxFQUFJckMsWUFBWThELEdBQ2hCRCxFQUFLYixZQUFjLGNBQ25CYSxFQUFLdkIsVUFBVXZFLE9BQU8sWUFDdEJzRSxFQUFJN0QsTUFBTXdGLE9BQVMsTUFDdkIsS0FBTyxDQUNIM0IsRUFBSWpELFlBQVkwRSxHQUNoQkQsRUFBS3ZCLFVBQVVDLElBQUksWUFDbkJzQixFQUFLYixZQUFjLGNBQ25CWCxFQUFJN0QsTUFBTXdGLE9BQVMsUUFDbkIsTUFBTUMsRUFBT3RGLFNBQVNXLGNBQWMsS0FDcEMyRSxFQUFLM0IsVUFBVUMsSUFBSSxvQkFDbkIwQixFQUFLakIsWUFBYyxnQkFBZ0JiLEVBQUlsSCxHQUFHeUksY0FDMUNJLEVBQVMxRSxZQUFZNkUsR0FDckIsTUFBTUMsRUFBVXZGLFNBQVNXLGNBQWMsS0FDdkM0RSxFQUFRNUIsVUFBVUMsSUFBSSxvQkFDdEIyQixFQUFRbEIsWUFBYyxhQUFhYixFQUFJbEgsR0FBR2tJLEtBQUtDLFVBQVUsRUFBRyxRQUFRakIsRUFBSWxILEdBQUdrSSxLQUFLQyxVQUFVLEdBQUksTUFDOUZVLEVBQVMxRSxZQUFZOEUsR0FDckIsTUFBTUMsRUFBZXhGLFNBQVNXLGNBQWMsS0FDNUM2RSxFQUFhN0IsVUFBVUMsSUFBSSxvQkFDTCxLQUFuQkosRUFBSWxILEdBQUcwSSxTQUNOUSxFQUFhbkIsWUFBYyxnQkFDRCxLQUFwQmIsRUFBSWxILEdBQUkwSSxTQUNkUSxFQUFhbkIsWUFBYyxtQkFFM0JtQixFQUFhbkIsWUFBYyxpQkFFL0JjLEVBQVMxRSxZQUFZK0UsR0FDckIsTUFBTUMsRUFBZ0J6RixTQUFTVyxjQUFjLEtBQzdDOEUsRUFBY3BCLFlBQWMsWUFBWWIsRUFBSWxILEdBQUcySSxVQUMvQ0UsRUFBUzFFLFlBQVlnRixFQUN6QixLQUdKLE1BQU1DLEVBQVkxRixTQUFTVyxjQUFjLE1BQ3pDMUUsRUFBUXdFLFlBQVlpRixFQUN4QixDQUNKLENGM05BeEgsRUFBUWdELGtCQUFvQixJQUM1QmhELEVBQVEwQyxjQUFnQixJQUVsQjFDLEVBQVEwQixPQUFTLFNBQWMsS0FBTSxRQUUzQzFCLEVBQVFlLE9BQVMsSUFDakJmLEVBQVErQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTL0MsR0FLSixLQUFXLFlBQWlCLFdHMUIzQyxNQUFNeUgsRUFDVEMsWUFBWXRCLEVBQU9FLEVBQU1RLEVBQVVELEVBQWFFLEdBQzVDbkosS0FBS3dJLE1BQVFBLEVBQ2J4SSxLQUFLa0osU0FBV0EsRUFDaEJsSixLQUFLaUosWUFBY0EsRUFDbkJqSixLQUFLMEksS0FBT0EsRUFDWjFJLEtBQUttSixRQUFVQSxDQUNuQixFQzRCRyxJQUFJWSxFQUFRLElBQUlDLEtBQ25CQyxFQUFLQyxPQUFPSCxFQUFNSSxXQUFXQyxTQUFTLEVBQUcsS0FDekNDLEVBQUtILE9BQU9ILEVBQU1PLFdBQWEsR0FBR0YsU0FBUyxFQUFHLEtBQzlDRyxFQUFPUixFQUFNUyxjQUNqQlQsRUFBUVEsRUFBTyxJQUFNRixFQUFLLElBQU1KLEVDakN6QixJQUFJM0MsRUFBVSxHSkVkRixhQUFhcUQsUUFBUSxVQUNwQm5ELEVBQVUvRixLQUFLbUosTUFBTXRELGFBQWFxRCxRQUFRLFNBQzFDaEQsRUFBVUgsSUNMWCxXQUNILE1BQU1xRCxFQUFhekcsU0FBU0MsY0FBYyxvQkFDcEN5RyxFQUFTMUcsU0FBUzZFLGVBQWUsVUFDdkM0QixFQUFXMUMsaUJBQWlCLFNBQVMsS0FDakMsTUFBTTRDLEVBQWMzRyxTQUFTQyxjQUFjLHFCQUN4QzBHLEVBQVloRCxVQUFVeUIsU0FBUyxTQUM5QnVCLEVBQVloRCxVQUFVdkUsT0FBTyxRQUM3QnNILEVBQU9yQyxZQUFjLGdCQUVyQnNDLEVBQVloRCxVQUFVQyxJQUFJLFFBQzFCOEMsRUFBT3JDLFlBQWMsY0FDekIsR0FFUixDR1RBdUMsR0hXTyxXQUNILElBQUlDLEVBQW1CLEdBQ3ZCLElBQUksTUFBTWxCLEtBQVF2QyxFQUNNLFVBQWpCdUMsRUFBS1YsU0FDSjRCLEVBQWlCdEwsS0FBS29LLEVBQUtWLFNBSW5DLElBQUk2QixFQUFvQkMsTUFBTUMsS0FBSyxJQUFJQyxJQUFJSixJQUUzQyxJQUFJLElBQUl2SyxFQUFJLEVBQUdBLEVBQUl3SyxFQUFrQjFLLE9BQVFFLElBQUssQ0FDOUMsTUFBTTRLLEVBQWVsSCxTQUFTQyxjQUFjLHFCQUM1QyxJQUFJa0gsRUFBY0wsRUFBa0J4SyxHQUNwQyxNQUFNOEssRUFBYXBILFNBQVNXLGNBQWMsTUFDMUN5RyxFQUFXekQsVUFBVUMsSUFBSSxnQkFDekJ3RCxFQUFXL0MsWUFBYyxHQUFHOEMsSUFDNUJELEVBQWF6RyxZQUFZMkcsR0FDekIsTUFBTUMsRUFBT3JILFNBQVNXLGNBQWMsUUFDcEMwRyxFQUFLMUQsVUFBVUMsSUFBSSw2QkFDbkJ5RCxFQUFLaEQsWUFBYyxTQUNuQitDLEVBQVczRyxZQUFZNEcsR0FDdkJELEVBQVdyRCxpQkFBaUIsU0FBUyxLQUVqQ1IsRUFEcUJILEVBQVFrRSxRQUFPQyxHQUFLQSxFQUFFdEMsVUFBWWtDLEtBRXZEbkgsU0FBU0MsY0FBYyxrQkFBa0JvRSxZQUFjOEMsQ0FBVyxHQUUxRSxDQUVzQm5ILFNBQVNDLGNBQWMsbUJBQy9COEQsaUJBQWlCLFNBQVMsS0FDcEMvRCxTQUFTQyxjQUFjLGNBQWNKLE1BQU0rRSxXQUFhLFVBQ3hENUUsU0FBU0MsY0FBYyxpQkFBaUJKLE1BQU0rRSxXQUFhLFNBQVMsSUFHL0M1RSxTQUFTNkUsZUFBZSxzQkFDaENkLGlCQUFpQixTQUFTLEtBQ3ZDLE1BQU1tRCxFQUFlbEgsU0FBU0MsY0FBYyxxQkFDNUMsSUFBSWtILEVBQWNuSCxTQUFTNkUsZUFBZSxlQUFlQyxNQUN6RCxNQUFNc0MsRUFBYXBILFNBQVNXLGNBQWMsTUFDMUN5RyxFQUFXekQsVUFBVUMsSUFBSSxnQkFDekJ3RCxFQUFXL0MsWUFBYyxHQUFHOEMsSUFDNUJELEVBQWF6RyxZQUFZMkcsR0FDekIsTUFBTUMsRUFBT3JILFNBQVNXLGNBQWMsUUFDcEMwRyxFQUFLMUQsVUFBVUMsSUFBSSw2QkFDbkJ5RCxFQUFLaEQsWUFBYyxTQUNuQitDLEVBQVczRyxZQUFZNEcsR0FDdkJELEVBQVdyRCxpQkFBaUIsU0FBUyxLQUVqQ1IsRUFEcUJILEVBQVFrRSxRQUFPQyxHQUFLQSxFQUFFdEMsVUFBWWtDLEtBRXZEbkgsU0FBU0MsY0FBYyxrQkFBa0JvRSxZQUFjOEMsQ0FBVyxHQUNyRSxHQUVULENHOURBSyxHSGlFMEJ4SCxTQUFTQyxjQUFjLGdCQUMvQjhELGlCQUFpQixTQUFTLEtBQ3BDL0QsU0FBU0MsY0FBYyxjQUFjSixNQUFNK0UsV0FBYSxVQUN4RDVFLFNBQVNDLGNBQWMsUUFBUUosTUFBTStFLFdBQWEsU0FBUyxJQUk1RCxXQUNILE1BQU02QyxFQUFZekgsU0FBUzZFLGVBQWUsT0FDcEM2QyxFQUFTMUgsU0FBUzZFLGVBQWUsVUFDakM4QyxFQUFnQjNILFNBQVM2RSxlQUFlLGtCQUN4QzJDLEVBQWF4SCxTQUFTNkUsZUFBZSxzQkFFM0M0QyxFQUFVMUQsaUJBQWlCLFNBQVMsS0FDaEMvRCxTQUFTQyxjQUFjLGNBQWNKLE1BQU0rRSxXQUFhLFNBQ3hENUUsU0FBU0MsY0FBYyxRQUFRSixNQUFNK0UsV0FBYSxRQUFRLElBRzlEOEMsRUFBTzNELGlCQUFpQixTQUFTLEtBQzdCL0QsU0FBU0MsY0FBYyxjQUFjSixNQUFNK0UsV0FBYSxTQUN4RDVFLFNBQVNDLGNBQWMsUUFBUUosTUFBTStFLFdBQWEsU0FDbEQ1RSxTQUFTNkUsZUFBZSxTQUFTQyxNQUFRLEdBQ3pDOUUsU0FBUzZFLGVBQWUsUUFBUUMsTUFBUSxHQUN4QzlFLFNBQVM2RSxlQUFlLGVBQWVDLE1BQVEsR0FDL0M5RSxTQUFTNkUsZUFBZSxZQUFZQyxNQUFRLElBQzVDOUUsU0FBUzZFLGVBQWUsV0FBV0MsTUFBUSxRQUMzQzlFLFNBQVM2RSxlQUFlLE9BQU9SLFlBQWMsVUFBVSxJQUczRG1ELEVBQVd6RCxpQkFBaUIsU0FBUyxLQUNqQy9ELFNBQVNDLGNBQWMsY0FBY0osTUFBTStFLFdBQWEsU0FDeEQ1RSxTQUFTQyxjQUFjLGlCQUFpQkosTUFBTStFLFdBQWEsUUFBUSxJQUd2RStDLEVBQWM1RCxpQkFBaUIsU0FBUyxLQUNwQy9ELFNBQVNDLGNBQWMsY0FBY0osTUFBTStFLFdBQWEsU0FDeEQ1RSxTQUFTQyxjQUFjLGlCQUFpQkosTUFBTStFLFdBQWEsU0FDM0Q1RSxTQUFTNkUsZUFBZSxlQUFlQyxNQUFRLEVBQUUsR0FFekQsQ0d0R0E4QyxHRFRPLFdBQ0gsSUFBSWYsRUFBbUIsR0FDdkIsSUFBSSxNQUFNbEIsS0FBUXZDLEVBQ00sVUFBakJ1QyxFQUFLVixTQUNKNEIsRUFBaUJ0TCxLQUFLb0ssRUFBS1YsU0FJbkMsSUFBSTZCLEVBQW9CQyxNQUFNQyxLQUFLLElBQUlDLElBQUlKLElBRTNDLElBQUksSUFBSXZLLEVBQUksRUFBR0EsRUFBSXdLLEVBQWtCMUssT0FBUUUsSUFBSyxDQUM5QyxNQUFNdUwsRUFBZ0I3SCxTQUFTNkUsZUFBZSxXQUM5QyxJQUFJc0MsRUFBY0wsRUFBa0J4SyxHQUNwQyxNQUFNd0wsRUFBWTlILFNBQVNXLGNBQWMsVUFDekNtSCxFQUFVekQsWUFBYzhDLEVBQ3hCVyxFQUFVOUcsYUFBYSxRQUFTLEdBQUdtRyxLQUNuQ1UsRUFBY3BILFlBQVlxSCxHQUMxQjlILFNBQVM2RSxlQUFlLGVBQWVDLE1BQVEsRUFDbkQsQ0FFZTlFLFNBQVNDLGNBQWMsdUJBQy9COEQsaUJBQWlCLFNBQVMsS0FDN0IsTUFBTThELEVBQWdCN0gsU0FBUzZFLGVBQWUsV0FDOUMsSUFBSXNDLEVBQWNuSCxTQUFTNkUsZUFBZSxlQUFlQyxNQUN6RCxNQUFNZ0QsRUFBWTlILFNBQVNXLGNBQWMsVUFDekNtSCxFQUFVekQsWUFBYzhDLEVBQ3hCVyxFQUFVOUcsYUFBYSxRQUFTLEdBQUdtRyxLQUNuQ1UsRUFBY3BILFlBQVlxSCxHQUMxQjlILFNBQVM2RSxlQUFlLGVBQWVDLE1BQVEsRUFBRSxHQUV6RCxDQ3BCQWlELEdENkJrQi9ILFNBQVNDLGNBQWMsVUFDL0I4RCxpQkFBaUIsU0FBUyxLQUM1Qi9ELFNBQVNDLGNBQWMsa0JBQWtCb0UsWUFBYyxRQUV2RGQsRUFEaUJILEVBQVFrRSxRQUFPQyxHQUFtQixVQUFkQSxFQUFFdEMsVUFDbEIsSUFHSmpGLFNBQVNDLGNBQWMsVUFDL0I4RCxpQkFBaUIsU0FBUyxLQUNuQy9ELFNBQVNDLGNBQWMsa0JBQWtCb0UsWUFBYyxRQUV2RGQsRUFEaUJILEVBQVFrRSxRQUFPQyxHQUFLQSxFQUFFL0MsS0FBS0MsVUFBVSxFQUFHLE1BQVFvQixJQUM1QyxJQUdSN0YsU0FBU0MsY0FBYyxjQUMvQjhELGlCQUFpQixTQUFTLEtBQy9CL0QsU0FBU0MsY0FBYyxrQkFBa0JvRSxZQUFjLFlBQ3ZEZCxFQUFVSCxFQUFRLElDM0NScEQsU0FBUzZFLGVBQWUsT0FDaENkLGlCQUFpQixTQUFTLEtBQ2hDLEdBQUcvRCxTQUFTQyxjQUFjLFFBQVEwRCxVQUFVeUIsU0FBUyxXQUFZLENBQzdELElBQUlkLEVBQVF0RSxTQUFTNkUsZUFBZSxTQUFTQyxNQUN6Q04sRUFBT3hFLFNBQVM2RSxlQUFlLFFBQVFDLE1BQ3ZDRSxFQUFXaEYsU0FBUzZFLGVBQWUsWUFBWUMsTUFDL0NDLEVBQWMvRSxTQUFTNkUsZUFBZSxlQUFlQyxNQUNyREcsRUFBVWpGLFNBQVM2RSxlQUFlLFdBQVdDLE1BVWpELEdBVEExQixFQUFRN0QsR0FBUyxJQUFJb0csRUFBS3JCLEVBQU9FLEVBQU1RLEVBQVVELEVBQWFFLEdBQzlENUIsSUFDQXJELFNBQVNDLGNBQWMsUUFBUTBELFVBQVV2RSxPQUFPLFdBQ2hEWSxTQUFTNkUsZUFBZSxPQUFPUixZQUFjLFdBQzdDckUsU0FBUzZFLGVBQWUsU0FBU0MsTUFBUSxHQUN6QzlFLFNBQVM2RSxlQUFlLFFBQVFDLE1BQVEsR0FDeEM5RSxTQUFTNkUsZUFBZSxlQUFlQyxNQUFRLEdBQy9DOUUsU0FBUzZFLGVBQWUsWUFBWUMsTUFBUSxJQUM1QzlFLFNBQVM2RSxlQUFlLFdBQVdDLE1BQVEsUUFDZ0IsU0FBeEQ5RSxTQUFTNkUsZUFBZSxpQkFBaUJSLFlBRXhDZCxFQURpQkgsRUFBUWtFLFFBQU9DLEdBQUtBLEVBQUUvQyxLQUFLQyxVQUFVLEVBQUcsTUFBUW9CLFVBRTlELEdBQTJELGFBQXhEN0YsU0FBUzZFLGVBQWUsaUJBQWlCUixZQUMvQ2QsRUFBVUgsUUFDUCxHQUEyRCxTQUF4RHBELFNBQVM2RSxlQUFlLGlCQUFpQlIsWUFFL0NkLEVBRGlCSCxFQUFRa0UsUUFBT0MsR0FBbUIsVUFBZEEsRUFBRXRDLGVBRXBDLENBQ0gsSUFBSWtDLEVBQWNuSCxTQUFTNkUsZUFBZSxpQkFBaUJSLFlBRTNEZCxFQURtQkgsRUFBUWtFLFFBQU9DLEdBQUtBLEVBQUV0QyxVQUFZa0MsSUFFekQsQ0FDSixLQUFPLENBQ0gsSUFBSTdDLEVBQVF0RSxTQUFTNkUsZUFBZSxTQUFTQyxNQUN6Q04sRUFBT3hFLFNBQVM2RSxlQUFlLFFBQVFDLE1BQ3ZDRSxFQUFXaEYsU0FBUzZFLGVBQWUsWUFBWUMsTUFDL0NDLEVBQWMvRSxTQUFTNkUsZUFBZSxlQUFlQyxNQUNyREcsRUFBVWpGLFNBQVM2RSxlQUFlLFdBQVdDLE1BQ2pELE1BQU1rRCxFQUFVLElBQUlyQyxFQUFLckIsRUFBT0UsRUFBTVEsRUFBVUQsRUFBYUUsR0FRN0QsR0FQQTdCLEVBQVE3SCxLQUFLeU0sR0FDYi9FLElBQ0FqRCxTQUFTNkUsZUFBZSxTQUFTQyxNQUFRLEdBQ3pDOUUsU0FBUzZFLGVBQWUsUUFBUUMsTUFBUSxHQUN4QzlFLFNBQVM2RSxlQUFlLGVBQWVDLE1BQVEsR0FDL0M5RSxTQUFTNkUsZUFBZSxZQUFZQyxNQUFRLElBQzVDOUUsU0FBUzZFLGVBQWUsV0FBV0MsTUFBUSxRQUNnQixTQUF4RDlFLFNBQVM2RSxlQUFlLGlCQUFpQlIsWUFFeENkLEVBRGlCSCxFQUFRa0UsUUFBT0MsR0FBS0EsRUFBRS9DLEtBQUtDLFVBQVUsRUFBRyxNQUFRb0IsVUFFOUQsR0FBMkQsYUFBeEQ3RixTQUFTNkUsZUFBZSxpQkFBaUJSLFlBQy9DZCxFQUFVSCxRQUNQLEdBQTJELFNBQXhEcEQsU0FBUzZFLGVBQWUsaUJBQWlCUixZQUUvQ2QsRUFEaUJILEVBQVFrRSxRQUFPQyxHQUFtQixVQUFkQSxFQUFFdEMsZUFFcEMsQ0FDSCxJQUFJa0MsRUFBY25ILFNBQVM2RSxlQUFlLGlCQUFpQlIsWUFFM0RkLEVBRG1CSCxFQUFRa0UsUUFBT0MsR0FBS0EsRUFBRXRDLFVBQVlrQyxJQUV6RCxDQUNKLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlcy5jc3M/NDRiMiIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3RvcmFnZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvVUkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2NvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7XFxufVxcblxcbi5wYWdlLW1hc2sge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBib3R0b206IDA7XFxuICAgIHRvcDogMDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjYpO1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbiN0YXNrLWRhdGEge1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdG9wOiAyMCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcXG4gICAgd2lkdGg6IDM1JTtcXG4gICAgaGVpZ2h0OiA2MCU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0NBRjBGODtcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbi5idXR0b25zIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4jcHJvamVjdC1mb3JtIHtcXG4gICAgcGFkZGluZzogMTVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0FGMEY4O1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgdG9wOiAzNyU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcXG4gICAgd2lkdGg6IDM1JTtcXG4gICAgaGVpZ2h0OiAxMTBweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbiNwcm9qZWN0TmFtZS1idXR0b24ge1xcbiAgICB3aWR0aDogMjAlO1xcbn1cXG5cXG4uZ3JpZC1jb250YWluZXIgIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgNWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA3ZnI7XFxufVxcblxcbi5tYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIHtcXG4gICAgZm9udC12YXJpYXRpb24tc2V0dGluZ3M6XFxuICAgICdGSUxMJyAwLFxcbiAgICAnd2dodCcgNDAwLFxcbiAgICAnR1JBRCcgMCxcXG4gICAgJ29wc3onIDQ4XFxufVxcblxcbnNwYW4uc2l6ZS00OCB7XFxuICAgIGZvbnQtc2l6ZTogNDBweDtcXG59XFxuXFxuLnBsdXMtYnV0dG9uIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAzMDQ1RTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICB3aWR0aDogMTUwcHg7XFxuICAgIGhlaWdodDogMzBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbn1cXG5cXG4ucGx1cy1idXR0b246aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA5NkM3O1xcbiAgICBjb2xvcjogYmxhY2s7XFxufVxcblxcbmhlYWRlciB7XFxuICAgIGdyaWQtY29sdW1uOiAxIC8gMztcXG4gICAgcGFkZGluZzogMTVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzdCNjtcXG4gICAgZm9udC1zaXplOiAyNHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5sb2dve1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG5cXG4uc2lkZS1iYXIge1xcbiAgICBncmlkLWNvbHVtbjogMSAvIDI7XFxuICAgIGdyaWQtcm93OiAyIC8gMztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQ4Q0FFNDtcXG59XFxuXFxuLmNvbnRlbnQge1xcbiAgICBncmlkLXJvdzogMiAvIDM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNDQUYwRjg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4uY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IDgwJTtcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXG59XFxuXFxudWwge1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG5saSB7XFxuICAgIG1hcmdpbjogMTBweCAxMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDVweDtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxubGk6aG92ZXIsIGxpOmZvY3VzIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwQjREODtcXG59XFxuXFxuLmRyb3Bkb3duLWJ1dHRvbiB7XFxuICAgIHdpZHRoOiA4MCU7XFxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgcGFkZGluZzogNXB4O1xcbn1cXG5cXG4jZXhwYW5kIHtcXG4gICAgbWFyZ2luLXRvcDogNXB4O1xcbn1cXG5cXG4uZHJvcC1tZW51IHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5kcm9wZG93bi1jb250ZW50IHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXG59XFxuXFxuLnNob3cge1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLnByb2plY3QtYnV0dG9uIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XFxufVxcblxcbi50YXNrIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwcHggMTA1cHg7XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5vcHRpb25zIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG5cXG4udHJhc2gsIC5kcm9wLCAuZWRpdCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmNoZWNrLXRpdGxlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxNXB4O1xcbn1cXG5cXG4uZXhwYW5kZWQtY29udGVudCB7XFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcXG59XFxuXFxuLmNvbHVtbiB7XFxuICAgIGdyaWQtY29sdW1uOiAxIC8gMztcXG59XFxuXFxuLmZsZXgtanVzdGlmeSB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSxzQkFBc0I7SUFDdEIsU0FBUztJQUNULFVBQVU7SUFDViwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsT0FBTztJQUNQLFFBQVE7SUFDUixTQUFTO0lBQ1QsTUFBTTtJQUNOLGlDQUFpQztJQUNqQyxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsU0FBUztJQUNULFFBQVE7SUFDUiwyQkFBMkI7SUFDM0IsVUFBVTtJQUNWLFdBQVc7SUFDWCxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsZUFBZTtJQUNmLFNBQVM7SUFDVCxRQUFRO0lBQ1IsMkJBQTJCO0lBQzNCLFVBQVU7SUFDVixhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QiwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSTs7Ozs7QUFLSjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGVBQWU7SUFDZixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLFlBQVk7SUFDWixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixlQUFlO0lBQ2YsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGVBQWU7SUFDZixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtJQUNiLDhCQUE4QjtJQUM5Qiw4QkFBOEI7SUFDOUIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsUUFBUTtJQUNSLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIqIHtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBmb250LWZhbWlseTogUm9ib3RvLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG4ucGFnZS1tYXNrIHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC42KTtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4jdGFzay1kYXRhIHtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRvcDogMjAlO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XFxuICAgIHdpZHRoOiAzNSU7XFxuICAgIGhlaWdodDogNjAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDEwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNDQUYwRjg7XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4uYnV0dG9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuI3Byb2plY3QtZm9ybSB7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0NBRjBGODtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRvcDogMzclO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XFxuICAgIHdpZHRoOiAzNSU7XFxuICAgIGhlaWdodDogMTEwcHg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMTBweDtcXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xcbn1cXG5cXG4jcHJvamVjdE5hbWUtYnV0dG9uIHtcXG4gICAgd2lkdGg6IDIwJTtcXG59XFxuXFxuLmdyaWQtY29udGFpbmVyICB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDVmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgN2ZyO1xcbn1cXG5cXG4ubWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZCB7XFxuICAgIGZvbnQtdmFyaWF0aW9uLXNldHRpbmdzOlxcbiAgICAnRklMTCcgMCxcXG4gICAgJ3dnaHQnIDQwMCxcXG4gICAgJ0dSQUQnIDAsXFxuICAgICdvcHN6JyA0OFxcbn1cXG5cXG5zcGFuLnNpemUtNDgge1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxufVxcblxcbi5wbHVzLWJ1dHRvbiB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMzA0NUU7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDE1MHB4O1xcbiAgICBoZWlnaHQ6IDMwcHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG59XFxuXFxuLnBsdXMtYnV0dG9uOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwOTZDNztcXG4gICAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxuICAgIHBhZGRpbmc6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDc3QjY7XFxuICAgIGZvbnQtc2l6ZTogMjRweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4ubG9nb3tcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxMHB4O1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXFxuLnNpZGUtYmFyIHtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xcbiAgICBncmlkLXJvdzogMiAvIDM7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0OENBRTQ7XFxufVxcblxcbi5jb250ZW50IHtcXG4gICAgZ3JpZC1yb3c6IDIgLyAzO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0FGMEY4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmNvbnRhaW5lciB7XFxuICAgIHdpZHRoOiA4MCU7XFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxufVxcblxcbnVsIHtcXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcXG59XFxuXFxubGkge1xcbiAgICBtYXJnaW46IDEwcHggMTBweDtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiA1cHg7XFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcbiAgICBwYWRkaW5nOiA1cHg7XFxufVxcblxcbmxpOmhvdmVyLCBsaTpmb2N1cyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMEI0RDg7XFxufVxcblxcbi5kcm9wZG93bi1idXR0b24ge1xcbiAgICB3aWR0aDogODAlO1xcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIHBhZGRpbmc6IDVweDtcXG59XFxuXFxuI2V4cGFuZCB7XFxuICAgIG1hcmdpbi10b3A6IDVweDtcXG59XFxuXFxuLmRyb3AtbWVudSB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4uZHJvcGRvd24tY29udGVudCB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgd2lkdGg6IDkwJTtcXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XFxufVxcblxcbi5zaG93IHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi5wcm9qZWN0LWJ1dHRvbiB7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbn1cXG5cXG4udGFzayB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDEwNXB4O1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4ub3B0aW9ucyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgIGdhcDogNXB4O1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuXFxuLnRyYXNoLCAuZHJvcCwgLmVkaXQge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5jaGVjay10aXRsZSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTVweDtcXG59XFxuXFxuLmV4cGFuZGVkLWNvbnRlbnQge1xcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XFxufVxcblxcbi5jb2x1bW4ge1xcbiAgICBncmlkLWNvbHVtbjogMSAvIDM7XFxufVxcblxcbi5mbGV4LWp1c3RpZnkge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlcy5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBteVRhc2tzIH0gZnJvbSBcIi5cIjtcbmltcG9ydCB7IHNob3dUYXNrcyB9IGZyb20gXCIuL1VJXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBwb3B1bGF0ZVN0b3JhZ2UoKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0YXNrXCIsIEpTT04uc3RyaW5naWZ5KG15VGFza3MpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbWVtYmVyVGFza3MoKSB7XG4gICAgaWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ0YXNrXCIpKSB7XG4gICAgICAgIG15VGFza3MgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGFza1wiKSk7XG4gICAgICAgIHNob3dUYXNrcyhteVRhc2tzKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVGcm9tU3RvcmFnZSgpe1xuICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwidGFza1wiKTtcbiAgICBwb3B1bGF0ZVN0b3JhZ2UoKTtcbn0iLCJpbXBvcnQgeyB0YXNrIH0gZnJvbSBcIi4vY29uc3RydWN0b3JcIjtcbmltcG9ydCB7IG15VGFza3MgfSBmcm9tIFwiLi9pbmRleFwiO1xuaW1wb3J0IHsgZGVsZXRlRnJvbVN0b3JhZ2UgfSBmcm9tIFwiLi9zdG9yYWdlXCI7XG5cbmV4cG9ydCBsZXQgaW5kZXg7XG5leHBvcnQgZnVuY3Rpb24gZHJvcGRvd24oKSB7XG4gICAgY29uc3QgZHJvcEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZHJvcGRvd24tYnV0dG9uXCIpO1xuICAgIGNvbnN0IGV4cGFuZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZXhwYW5kXCIpO1xuICAgIGRyb3BCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgZHJvcENvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRyb3Bkb3duLWNvbnRlbnRcIik7XG4gICAgICAgIGlmKGRyb3BDb250ZW50LmNsYXNzTGlzdC5jb250YWlucyhcInNob3dcIikpIHtcbiAgICAgICAgICAgIGRyb3BDb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIpO1xuICAgICAgICAgICAgZXhwYW5kLnRleHRDb250ZW50ID0gXCJleHBhbmRfbW9yZVwiO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZHJvcENvbnRlbnQuY2xhc3NMaXN0LmFkZChcInNob3dcIik7XG4gICAgICAgICAgICBleHBhbmQudGV4dENvbnRlbnQgPSBcImV4cGFuZF9sZXNzXCI7XG4gICAgICAgIH1cbiAgICB9KTsgICBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFByb2plY3QoKSB7XG4gICAgbGV0IHByb2plY3ROYW1lQXJyYXkgPSBbXTtcbiAgICBmb3IoY29uc3QgdGFzayBvZiBteVRhc2tzKXtcbiAgICAgICAgaWYodGFzay5wcm9qZWN0ICE9PSBcImluYm94XCIpe1xuICAgICAgICAgICAgcHJvamVjdE5hbWVBcnJheS5wdXNoKHRhc2sucHJvamVjdCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgdW5pcXVlUHJvamVjdE5hbWUgPSBBcnJheS5mcm9tKG5ldyBTZXQocHJvamVjdE5hbWVBcnJheSkpO1xuICAgIFxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCB1bmlxdWVQcm9qZWN0TmFtZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBwcm9qZWN0c0NvbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRyb3Bkb3duLWNvbnRlbnRcIik7XG4gICAgICAgIGxldCBwcm9qZWN0TmFtZSA9IHVuaXF1ZVByb2plY3ROYW1lW2ldO1xuICAgICAgICBjb25zdCBwcm9qZWN0RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICBwcm9qZWN0RGl2LmNsYXNzTGlzdC5hZGQoXCJmbGV4LWp1c3RpZnlcIik7XG4gICAgICAgIHByb2plY3REaXYudGV4dENvbnRlbnQgPSBgJHtwcm9qZWN0TmFtZX1gO1xuICAgICAgICBwcm9qZWN0c0NvbnQuYXBwZW5kQ2hpbGQocHJvamVjdERpdik7XG4gICAgICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgaWNvbi5jbGFzc0xpc3QuYWRkKFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiKTtcbiAgICAgICAgaWNvbi50ZXh0Q29udGVudCA9IFwiZGVsZXRlXCI7XG4gICAgICAgIHByb2plY3REaXYuYXBwZW5kQ2hpbGQoaWNvbik7XG4gICAgICAgIHByb2plY3REaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIGxldCBhbm90aGVyUHJvamVjdCA9IG15VGFza3MuZmlsdGVyKHggPT4geC5wcm9qZWN0ID09PSBwcm9qZWN0TmFtZSk7XG4gICAgICAgICAgICBzaG93VGFza3MoYW5vdGhlclByb2plY3QpO1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgcHJvamVjdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1idXR0b25cIik7XG4gICAgcHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBhZ2UtbWFza1wiKS5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC1mb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICB9KTtcblxuICAgIGNvbnN0IGFkZFByb2plY3RCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2plY3ROYW1lLWJ1dHRvblwiKTtcbiAgICBhZGRQcm9qZWN0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb2plY3RzQ29udCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZHJvcGRvd24tY29udGVudFwiKTtcbiAgICAgICAgbGV0IHByb2plY3ROYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXctcHJvamVjdFwiKS52YWx1ZTtcbiAgICAgICAgY29uc3QgcHJvamVjdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgICAgcHJvamVjdERpdi5jbGFzc0xpc3QuYWRkKFwiZmxleC1qdXN0aWZ5XCIpO1xuICAgICAgICBwcm9qZWN0RGl2LnRleHRDb250ZW50ID0gYCR7cHJvamVjdE5hbWV9YDtcbiAgICAgICAgcHJvamVjdHNDb250LmFwcGVuZENoaWxkKHByb2plY3REaXYpO1xuICAgICAgICBjb25zdCBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICAgIGljb24uY2xhc3NMaXN0LmFkZChcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIik7XG4gICAgICAgIGljb24udGV4dENvbnRlbnQgPSBcImRlbGV0ZVwiO1xuICAgICAgICBwcm9qZWN0RGl2LmFwcGVuZENoaWxkKGljb24pO1xuICAgICAgICBwcm9qZWN0RGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBsZXQgYW5vdGhlclByb2plY3QgPSBteVRhc2tzLmZpbHRlcih4ID0+IHgucHJvamVjdCA9PT0gcHJvamVjdE5hbWUpO1xuICAgICAgICAgICAgc2hvd1Rhc2tzKGFub3RoZXJQcm9qZWN0KTtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGVudC10aXRsZVwiKS50ZXh0Q29udGVudCA9IHByb2plY3ROYW1lO1xuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93Rm9ybSgpIHtcbiAgICBjb25zdCBhZGRUYXNrQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbHVzLWJ1dHRvblwiKTtcbiAgICBhZGRUYXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGFnZS1tYXNrXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm1cIikuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xuICAgIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoaWRlRm9ybSgpIHtcbiAgICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZFwiKTtcbiAgICBjb25zdCBjYW5jZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbmNlbFwiKTtcbiAgICBjb25zdCBjYW5jZWxQcm9qZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW5jZWwtcHJvamVjdFwiKTtcbiAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0TmFtZS1idXR0b25cIik7XG5cbiAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYWdlLW1hc2tcIikuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgIH0pXG5cbiAgICBjYW5jZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYWdlLW1hc2tcIikuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZSA9IFwiXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJpb3JpdHlcIikudmFsdWUgPSBcIjFcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0XCIpLnZhbHVlID0gXCJpbmJveFwiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZFwiKS50ZXh0Q29udGVudCA9IFwiQWRkIHRhc2tcIjtcbiAgICB9KSBcbiAgICBcbiAgICBhZGRQcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGFnZS1tYXNrXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2plY3QtZm9ybVwiKS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcbiAgICB9KVxuICAgIFxuICAgIGNhbmNlbFByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wYWdlLW1hc2tcIikuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdC1mb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy1wcm9qZWN0XCIpLnZhbHVlID0gXCJcIjtcbiAgICB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2hvd1Rhc2tzKGFycikge1xuICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnRhc2tzXCIpO1xuICAgIHdoaWxlKGNvbnRlbnQuZmlyc3RDaGlsZCl7XG4gICAgICAgIGNvbnRlbnQucmVtb3ZlQ2hpbGQoY29udGVudC5sYXN0Q2hpbGQpO1xuICAgIH1cbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrXCIpO1xuICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKGRpdik7XG4gICAgICAgIGNvbnN0IHRpdGxlQ29udCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRpdGxlQ29udC5jbGFzc0xpc3QuYWRkKFwiY2hlY2stdGl0bGVcIik7XG4gICAgICAgIGRpdi5hcHBlbmRDaGlsZCh0aXRsZUNvbnQpO1xuICAgICAgICBjb25zdCBjaGVjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgY2hlY2suc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImNoZWNrYm94XCIpO1xuICAgICAgICB0aXRsZUNvbnQuYXBwZW5kQ2hpbGQoY2hlY2spO1xuICAgICAgICBjaGVjay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYoY2hlY2suY2hlY2tlZCkge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQucmVtb3ZlQ2hpbGQoZGl2KTtcbiAgICAgICAgICAgICAgICBsZXQgcHJvamVjdEluZGV4ID0gbXlUYXNrcy5maW5kSW5kZXgoZWwgPT4gZWwgPT09IGFycltpXSk7XG4gICAgICAgICAgICAgICAgbXlUYXNrcy5zcGxpY2UocHJvamVjdEluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICBkZWxldGVGcm9tU3RvcmFnZSgpO1xuICAgICAgICAgICAgICAgIHNob3dUYXNrcyhhcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgIHAudGV4dENvbnRlbnQgPSBgJHthcnJbaV0udGl0bGV9YDtcbiAgICAgICAgdGl0bGVDb250LmFwcGVuZENoaWxkKHApO1xuXG4gICAgICAgIGNvbnN0IG9wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIG9wdGlvbi5jbGFzc0xpc3QuYWRkKFwib3B0aW9uc1wiKTtcbiAgICAgICAgZGl2LmFwcGVuZENoaWxkKG9wdGlvbik7XG5cbiAgICAgICAgY29uc3QgZGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICBkYXRlLnRleHRDb250ZW50ID0gYCR7YXJyW2ldLmRhdGUuc3Vic3RyaW5nKDAsIDEwKX1gO1xuICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQoZGF0ZSk7XG5cbiAgICAgICAgY29uc3QgdHJhc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgdHJhc2guY2xhc3NMaXN0LmFkZChcInRyYXNoXCIpO1xuICAgICAgICB0cmFzaC5jbGFzc0xpc3QuYWRkKFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiKTtcbiAgICAgICAgdHJhc2gudGV4dENvbnRlbnQgPSBcImRlbGV0ZVwiO1xuICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQodHJhc2gpO1xuICAgICAgICB0cmFzaC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgY29udGVudC5yZW1vdmVDaGlsZChkaXYpO1xuICAgICAgICAgICAgbGV0IHByb2plY3RJbmRleCA9IG15VGFza3MuZmluZEluZGV4KGVsID0+IGVsID09PSBhcnJbaV0pO1xuICAgICAgICAgICAgbXlUYXNrcy5zcGxpY2UocHJvamVjdEluZGV4LCAxKTtcbiAgICAgICAgICAgIGRlbGV0ZUZyb21TdG9yYWdlKCk7XG4gICAgICAgICAgICBzaG93VGFza3MoYXJyKTtcbiAgICAgICAgfSlcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGVkaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgZWRpdC5jbGFzc0xpc3QuYWRkKFwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiKTtcbiAgICAgICAgZWRpdC5jbGFzc0xpc3QuYWRkKFwiZWRpdFwiKTtcbiAgICAgICAgZWRpdC50ZXh0Q29udGVudCA9IFwiZWRpdFwiO1xuICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQoZWRpdCk7XG4gICAgICAgIGVkaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIGluZGV4ID0gbXlUYXNrcy5maW5kSW5kZXgoZWwgPT4gZWwgPT09IGFycltpXSk7XG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybVwiKS5jbGFzc0xpc3QuYWRkKFwiZWRpdGluZ1wiKTtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGFnZS1tYXNrXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJmb3JtXCIpLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikudmFsdWUgPSBhcnJbaV0udGl0bGU7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGVcIikudmFsdWUgPSBhcnJbaV0uZGF0ZTtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVzY3JpcHRpb25cIikudmFsdWUgPSBhcnJbaV0uZGVzY3JpcHRpb247XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5XCIpLnZhbHVlID0gYXJyW2ldLnByaW9yaXR5O1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0XCIpLnZhbHVlID0gYXJyW2ldLnByb2plY3Q7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZFwiKS50ZXh0Q29udGVudCA9IFwiRWRpdCB0YXNrXCI7XG4gICAgICAgIH0pXG5cbiAgICAgICAgY29uc3QgZHJvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBkcm9wLmNsYXNzTGlzdC5hZGQoXCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkXCIpO1xuICAgICAgICBkcm9wLmNsYXNzTGlzdC5hZGQoXCJkcm9wXCIpO1xuICAgICAgICBkcm9wLnRleHRDb250ZW50ID0gXCJleHBhbmRfbW9yZVwiO1xuICAgICAgICBvcHRpb24uYXBwZW5kQ2hpbGQoZHJvcCk7XG5cbiAgICAgICAgY29uc3QgZXhwYW5kZWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBleHBhbmRlZC5jbGFzc0xpc3QuYWRkKFwiY29sdW1uXCIpO1xuICAgICAgICBkcm9wLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgICAgICBpZihkcm9wLmNsYXNzTGlzdC5jb250YWlucyhcImV4cGFuZGVkXCIpKXtcbiAgICAgICAgICAgICAgICB3aGlsZShleHBhbmRlZC5maXJzdENoaWxkKXtcbiAgICAgICAgICAgICAgICAgICAgZXhwYW5kZWQucmVtb3ZlQ2hpbGQoZXhwYW5kZWQubGFzdENoaWxkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGl2LnJlbW92ZUNoaWxkKGV4cGFuZGVkKTtcbiAgICAgICAgICAgICAgICBkcm9wLnRleHRDb250ZW50ID0gXCJleHBhbmRfbW9yZVwiO1xuICAgICAgICAgICAgICAgIGRyb3AuY2xhc3NMaXN0LnJlbW92ZShcImV4cGFuZGVkXCIpO1xuICAgICAgICAgICAgICAgIGRpdi5zdHlsZS5oZWlnaHQgPSBcIjQwcHhcIjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGl2LmFwcGVuZENoaWxkKGV4cGFuZGVkKTtcbiAgICAgICAgICAgICAgICBkcm9wLmNsYXNzTGlzdC5hZGQoXCJleHBhbmRlZFwiKTtcbiAgICAgICAgICAgICAgICBkcm9wLnRleHRDb250ZW50ID0gXCJleHBhbmRfbGVzc1wiO1xuICAgICAgICAgICAgICAgIGRpdi5zdHlsZS5oZWlnaHQgPSBcIjE0NXB4XCI7XG4gICAgICAgICAgICAgICAgY29uc3QgZGVzYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgICAgICAgICAgICAgIGRlc2MuY2xhc3NMaXN0LmFkZChcImV4cGFuZGVkLWNvbnRlbnRcIik7XG4gICAgICAgICAgICAgICAgZGVzYy50ZXh0Q29udGVudCA9IGBEZXNjcmlwdGlvbjogJHthcnJbaV0uZGVzY3JpcHRpb259YDtcbiAgICAgICAgICAgICAgICBleHBhbmRlZC5hcHBlbmRDaGlsZChkZXNjKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICAgICAgZHVlRGF0ZS5jbGFzc0xpc3QuYWRkKFwiZXhwYW5kZWQtY29udGVudFwiKTtcbiAgICAgICAgICAgICAgICBkdWVEYXRlLnRleHRDb250ZW50ID0gYER1ZSBkYXRlOiAke2FycltpXS5kYXRlLnN1YnN0cmluZygwLCAxMCl9LCAke2FycltpXS5kYXRlLnN1YnN0cmluZygxMSwgMTYpfWA7XG4gICAgICAgICAgICAgICAgZXhwYW5kZWQuYXBwZW5kQ2hpbGQoZHVlRGF0ZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJpb3JpdHlUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgICAgICAgcHJpb3JpdHlUZXh0LmNsYXNzTGlzdC5hZGQoXCJleHBhbmRlZC1jb250ZW50XCIpO1xuICAgICAgICAgICAgICAgIGlmKGFycltpXS5wcmlvcml0eSA9PSBcIjFcIil7XG4gICAgICAgICAgICAgICAgICAgIHByaW9yaXR5VGV4dC50ZXh0Q29udGVudCA9IFwiUHJpb3JpdHk6IExvd1wiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZihhcnJbaV0uIHByaW9yaXR5ID09IFwiMlwiKXtcbiAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHlUZXh0LnRleHRDb250ZW50ID0gXCJQcmlvcml0eTogTWVkaXVtXCI7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHlUZXh0LnRleHRDb250ZW50ID0gXCJQcmlvcml0eTogSGlnaFwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBleHBhbmRlZC5hcHBlbmRDaGlsZChwcmlvcml0eVRleHQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb2plY3REZXRhaWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgICAgICAgICBwcm9qZWN0RGV0YWlsLnRleHRDb250ZW50ID0gYFByb2plY3Q6ICR7YXJyW2ldLnByb2plY3R9YDtcbiAgICAgICAgICAgICAgICBleHBhbmRlZC5hcHBlbmRDaGlsZChwcm9qZWN0RGV0YWlsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCBsaW5lQnJlYWsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaHJcIik7XG4gICAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQobGluZUJyZWFrKTtcbiAgICB9XG59XG5cbiIsImV4cG9ydCBjbGFzcyB0YXNrIHtcbiAgICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uLCBwcm9qZWN0KXtcbiAgICAgICAgdGhpcy50aXRsZSA9IHRpdGxlO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5kYXRlID0gZGF0ZTtcbiAgICAgICAgdGhpcy5wcm9qZWN0ID0gcHJvamVjdDtcbiAgICB9XG59IiwiaW1wb3J0IHsgc2hvd1Rhc2tzIH0gZnJvbSBcIi4vVUlcIjtcbmltcG9ydCB7IG15VGFza3MgfSBmcm9tIFwiLlwiO1xuXG5leHBvcnQgZnVuY3Rpb24gbmV3UHJvamVjdCgpe1xuICAgIGxldCBwcm9qZWN0TmFtZUFycmF5ID0gW107XG4gICAgZm9yKGNvbnN0IHRhc2sgb2YgbXlUYXNrcyl7XG4gICAgICAgIGlmKHRhc2sucHJvamVjdCAhPT0gXCJpbmJveFwiKXtcbiAgICAgICAgICAgIHByb2plY3ROYW1lQXJyYXkucHVzaCh0YXNrLnByb2plY3QpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbGV0IHVuaXF1ZVByb2plY3ROYW1lID0gQXJyYXkuZnJvbShuZXcgU2V0KHByb2plY3ROYW1lQXJyYXkpKTtcblxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCB1bmlxdWVQcm9qZWN0TmFtZS5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBwcm9qZWN0U2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0XCIpO1xuICAgICAgICBsZXQgcHJvamVjdE5hbWUgPSB1bmlxdWVQcm9qZWN0TmFtZVtpXTtcbiAgICAgICAgY29uc3QgbmV3T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICAgICAgbmV3T3B0aW9uLnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG4gICAgICAgIG5ld09wdGlvbi5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBgJHtwcm9qZWN0TmFtZX1gKTtcbiAgICAgICAgcHJvamVjdFNlbGVjdC5hcHBlbmRDaGlsZChuZXdPcHRpb24pO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5ldy1wcm9qZWN0XCIpLnZhbHVlID0gXCJcIjtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9qZWN0TmFtZS1idXR0b25cIik7XG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb2plY3RTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2plY3RcIik7XG4gICAgICAgIGxldCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibmV3LXByb2plY3RcIikudmFsdWU7XG4gICAgICAgIGNvbnN0IG5ld09wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XG4gICAgICAgIG5ld09wdGlvbi50ZXh0Q29udGVudCA9IHByb2plY3ROYW1lO1xuICAgICAgICBuZXdPcHRpb24uc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgYCR7cHJvamVjdE5hbWV9YCk7XG4gICAgICAgIHByb2plY3RTZWxlY3QuYXBwZW5kQ2hpbGQobmV3T3B0aW9uKTtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXctcHJvamVjdFwiKS52YWx1ZSA9IFwiXCI7XG4gICAgfSlcbn1cblxuZXhwb3J0IGxldCB0b2RheSA9IG5ldyBEYXRlKCk7XG5sZXQgZGQgPSBTdHJpbmcodG9kYXkuZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpO1xubGV0IG1tID0gU3RyaW5nKHRvZGF5LmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAnMCcpOyAvL0phbnVhcnkgaXMgMCFcbmxldCB5eXl5ID0gdG9kYXkuZ2V0RnVsbFllYXIoKTtcbnRvZGF5ID0geXl5eSArICctJyArIG1tICsgJy0nICsgZGQ7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93UHJvamVjdFRhc2tzKCkge1xuICAgIGNvbnN0IGluYm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbmJveFwiKTtcbiAgICBpbmJveC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnQtdGl0bGVcIikudGV4dENvbnRlbnQgPSBcIkluYm94XCI7XG4gICAgICAgIGxldCBpbmJveFRhc2tzID0gbXlUYXNrcy5maWx0ZXIoeCA9PiB4LnByb2plY3QgPT09IFwiaW5ib3hcIik7XG4gICAgICAgIHNob3dUYXNrcyhpbmJveFRhc2tzKTtcbiAgICB9KVxuXG4gICAgY29uc3QgdG9kYXlQcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0b2RheVwiKTtcbiAgICB0b2RheVByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID0gXCJUb2RheVwiO1xuICAgICAgICBsZXQgdG9kYXlUYXNrcyA9IG15VGFza3MuZmlsdGVyKHggPT4geC5kYXRlLnN1YnN0cmluZygwLCAxMCkgPT09IHRvZGF5KTtcbiAgICAgICAgc2hvd1Rhc2tzKHRvZGF5VGFza3MpO1xuICAgIH0pXG5cbiAgICBjb25zdCBhbGxUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWxsLXRhc2tzXCIpO1xuICAgIGFsbFRhc2tzLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGVudC10aXRsZVwiKS50ZXh0Q29udGVudCA9IFwiQWxsIHRhc2tzXCI7XG4gICAgICAgIHNob3dUYXNrcyhteVRhc2tzKTtcbiAgICB9KVxufSIsImltcG9ydCBcIi4vc3R5bGVzLmNzc1wiO1xuaW1wb3J0IHsgZHJvcGRvd24sIGFkZFByb2plY3QsIHNob3dGb3JtLCBoaWRlRm9ybSwgc2hvd1Rhc2tzLCBpbmRleCB9IGZyb20gXCIuL1VJXCI7XG5pbXBvcnQgeyB0YXNrIH0gZnJvbSBcIi4vY29uc3RydWN0b3JcIjtcbmltcG9ydCB7IG5ld1Byb2plY3QsIHNob3dQcm9qZWN0VGFza3MsIHRvZGF5IH0gZnJvbSBcIi4vcHJvamVjdFwiO1xuaW1wb3J0IHsgcG9wdWxhdGVTdG9yYWdlLCByZW1lbWJlclRhc2tzLCBkZWxldGVGcm9tU3RvcmFnZSB9IGZyb20gXCIuL3N0b3JhZ2VcIjtcblxuZXhwb3J0IGxldCBteVRhc2tzID0gW107XG5cbnJlbWVtYmVyVGFza3MoKTtcbmRyb3Bkb3duKCk7XG5hZGRQcm9qZWN0KCk7XG5zaG93Rm9ybSgpO1xuaGlkZUZvcm0oKTtcbm5ld1Byb2plY3QoKTtcbnNob3dQcm9qZWN0VGFza3MoKTtcblxuY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGRcIik7XG5hZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZm9ybVwiKS5jbGFzc0xpc3QuY29udGFpbnMoXCJlZGl0aW5nXCIpKSB7XG4gICAgICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikudmFsdWU7XG4gICAgICAgIGxldCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpLnZhbHVlO1xuICAgICAgICBsZXQgcHJpb3JpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5XCIpLnZhbHVlO1xuICAgICAgICBsZXQgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uXCIpLnZhbHVlO1xuICAgICAgICBsZXQgcHJvamVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdFwiKS52YWx1ZTtcbiAgICAgICAgbXlUYXNrc1tpbmRleF0gPSBuZXcgdGFzayh0aXRsZSwgZGF0ZSwgcHJpb3JpdHksIGRlc2NyaXB0aW9uLCBwcm9qZWN0KTtcbiAgICAgICAgZGVsZXRlRnJvbVN0b3JhZ2UoKTtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImZvcm1cIikuY2xhc3NMaXN0LnJlbW92ZShcImVkaXRpbmdcIik7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRkXCIpLnRleHRDb250ZW50ID0gXCJBZGQgdGFza1wiO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZSA9IFwiXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJpb3JpdHlcIikudmFsdWUgPSBcIjFcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0XCIpLnZhbHVlID0gXCJpbmJveFwiO1xuICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnQtdGl0bGVcIikudGV4dENvbnRlbnQgPT0gXCJUb2RheVwiKXtcbiAgICAgICAgICAgIGxldCB0b2RheVRhc2tzID0gbXlUYXNrcy5maWx0ZXIoeCA9PiB4LmRhdGUuc3Vic3RyaW5nKDAsIDEwKSA9PT0gdG9kYXkpO1xuICAgICAgICAgICAgc2hvd1Rhc2tzKHRvZGF5VGFza3MpO1xuICAgICAgICB9IGVsc2UgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID09IFwiQWxsIHRhc2tzXCIpe1xuICAgICAgICAgICAgc2hvd1Rhc2tzKG15VGFza3MpO1xuICAgICAgICB9IGVsc2UgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID09IFwiSW5ib3hcIil7XG4gICAgICAgICAgICBsZXQgaW5ib3hUYXNrcyA9IG15VGFza3MuZmlsdGVyKHggPT4geC5wcm9qZWN0ID09PSBcImluYm94XCIpO1xuICAgICAgICAgICAgc2hvd1Rhc2tzKGluYm94VGFza3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHByb2plY3ROYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgbGV0IHByb2plY3RUYXNrcyA9IG15VGFza3MuZmlsdGVyKHggPT4geC5wcm9qZWN0ID09PSBwcm9qZWN0TmFtZSk7XG4gICAgICAgICAgICBzaG93VGFza3MocHJvamVjdFRhc2tzKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCB0aXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGl0bGVcIikudmFsdWU7XG4gICAgICAgIGxldCBkYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpLnZhbHVlO1xuICAgICAgICBsZXQgcHJpb3JpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5XCIpLnZhbHVlO1xuICAgICAgICBsZXQgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uXCIpLnZhbHVlO1xuICAgICAgICBsZXQgcHJvamVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdFwiKS52YWx1ZTtcbiAgICAgICAgY29uc3QgbmV3VGFzayA9IG5ldyB0YXNrKHRpdGxlLCBkYXRlLCBwcmlvcml0eSwgZGVzY3JpcHRpb24sIHByb2plY3QpO1xuICAgICAgICBteVRhc2tzLnB1c2gobmV3VGFzayk7XG4gICAgICAgIHBvcHVsYXRlU3RvcmFnZSgpO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlXCIpLnZhbHVlID0gXCJcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvblwiKS52YWx1ZSA9IFwiXCI7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJpb3JpdHlcIikudmFsdWUgPSBcIjFcIjtcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0XCIpLnZhbHVlID0gXCJpbmJveFwiO1xuICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbnRlbnQtdGl0bGVcIikudGV4dENvbnRlbnQgPT0gXCJUb2RheVwiKXtcbiAgICAgICAgICAgIGxldCB0b2RheVRhc2tzID0gbXlUYXNrcy5maWx0ZXIoeCA9PiB4LmRhdGUuc3Vic3RyaW5nKDAsIDEwKSA9PT0gdG9kYXkpO1xuICAgICAgICAgICAgc2hvd1Rhc2tzKHRvZGF5VGFza3MpO1xuICAgICAgICB9IGVsc2UgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID09IFwiQWxsIHRhc2tzXCIpe1xuICAgICAgICAgICAgc2hvd1Rhc2tzKG15VGFza3MpO1xuICAgICAgICB9IGVsc2UgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50ID09IFwiSW5ib3hcIil7XG4gICAgICAgICAgICBsZXQgaW5ib3hUYXNrcyA9IG15VGFza3MuZmlsdGVyKHggPT4geC5wcm9qZWN0ID09PSBcImluYm94XCIpO1xuICAgICAgICAgICAgc2hvd1Rhc2tzKGluYm94VGFza3MpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHByb2plY3ROYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250ZW50LXRpdGxlXCIpLnRleHRDb250ZW50O1xuICAgICAgICAgICAgbGV0IHByb2plY3RUYXNrcyA9IG15VGFza3MuZmlsdGVyKHggPT4geC5wcm9qZWN0ID09PSBwcm9qZWN0TmFtZSk7XG4gICAgICAgICAgICBzaG93VGFza3MocHJvamVjdFRhc2tzKTtcbiAgICAgICAgfVxuICAgIH1cbn0pXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJwb3B1bGF0ZVN0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwibXlUYXNrcyIsImRlbGV0ZUZyb21TdG9yYWdlIiwicmVtb3ZlSXRlbSIsInNob3dUYXNrcyIsImFyciIsImxhc3RDaGlsZCIsImRpdiIsImNsYXNzTGlzdCIsImFkZCIsInRpdGxlQ29udCIsImNoZWNrIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNoZWNrZWQiLCJwcm9qZWN0SW5kZXgiLCJmaW5kSW5kZXgiLCJlbCIsInAiLCJ0ZXh0Q29udGVudCIsInRpdGxlIiwib3B0aW9uIiwiZGF0ZSIsInN1YnN0cmluZyIsInRyYXNoIiwiZWRpdCIsInZpc2liaWxpdHkiLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwiZGVzY3JpcHRpb24iLCJwcmlvcml0eSIsInByb2plY3QiLCJkcm9wIiwiZXhwYW5kZWQiLCJjb250YWlucyIsImhlaWdodCIsImRlc2MiLCJkdWVEYXRlIiwicHJpb3JpdHlUZXh0IiwicHJvamVjdERldGFpbCIsImxpbmVCcmVhayIsInRhc2siLCJjb25zdHJ1Y3RvciIsInRvZGF5IiwiRGF0ZSIsImRkIiwiU3RyaW5nIiwiZ2V0RGF0ZSIsInBhZFN0YXJ0IiwibW0iLCJnZXRNb250aCIsInl5eXkiLCJnZXRGdWxsWWVhciIsImdldEl0ZW0iLCJwYXJzZSIsImRyb3BCdXR0b24iLCJleHBhbmQiLCJkcm9wQ29udGVudCIsImRyb3Bkb3duIiwicHJvamVjdE5hbWVBcnJheSIsInVuaXF1ZVByb2plY3ROYW1lIiwiQXJyYXkiLCJmcm9tIiwiU2V0IiwicHJvamVjdHNDb250IiwicHJvamVjdE5hbWUiLCJwcm9qZWN0RGl2IiwiaWNvbiIsImZpbHRlciIsIngiLCJhZGRQcm9qZWN0IiwiYWRkQnV0dG9uIiwiY2FuY2VsIiwiY2FuY2VsUHJvamVjdCIsImhpZGVGb3JtIiwicHJvamVjdFNlbGVjdCIsIm5ld09wdGlvbiIsIm5ld1Byb2plY3QiLCJuZXdUYXNrIl0sInNvdXJjZVJvb3QiOiIifQ==